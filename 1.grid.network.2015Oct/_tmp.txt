
R version 3.2.1 (2015-06-18) -- "World-Famous Astronaut"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> ##########################################
> #2015Dec a generic network simulation code with files names as input
> #2015Oct13, use numeric lookup table for essential genes.
> #2014March3, redo ginppi simulation witht same parameter for ms02networks. 
> # 2014 Feb 17, change name "20131221.DIPandGIN.sim.aging_v2.R" to "net-aging-sim-2014Feb17.R"
> # 2013 Dec 20, merge DIP PPI and Genetic Inxt Net -> Multi-net approach
> #rm(list=ls())
> 
> single_network_failure_v2 = function(lambda1, lambda2=lambda1/10, threshold=4, p, pairs, essenLookupTb ) {
+   # single network failure simulation, 20151013Tue
+   # lambda1: First exponential constant failure rate for edges with degree > threshold
+   # lambda2: Second exponential constant failure rate for edges with degree <= threshold
+   # threshold: degree threshold for lambda1 and lambda2
+   # pairs: network in pairwide format, using numeric NOs 20151013
+   # essenLookupTb: lookup table for essential and nonessential genes, numeric values 
+   ## for debug:   lambda1 = 1/50; lambda2= lambda1/10; threshold=4; p=0.8
+   
+   inpairs = pairs[,3:4] #bookkeeping  
+   names(inpairs) = c('No1','No2')
+   
+   #get connectivities per node
+   degreeTb = data.frame( table(c(inpairs$No1, inpairs$No2)))
+   names(degreeTb) = c("No", "degree")
+   degreeTb$moduleAge = NA;
+   
+   for( i in 1:length(degreeTb[,1])){
+     if ( essenLookupTb[ degreeTb$No[i] ]) { #essential node
+       lambda = ifelse( degreeTb$degree[i] >= threshold, lambda1, lambda2)
+       age = rexp( degreeTb$degree[i], rate=lambda ) #exponential age
+       if(degreeTb$degree[i] >= threshold){
+         active = runif(degreeTb$degree[i])  #uniform interaction stochasticity
+         active = ifelse( active<=p, 1, NA  ) #pick active interactions
+         if( sum(active, na.rm=T) > 0 ){ #there should be at least 1 active intxn
+           age = age * active # only active interactions for modular age estimation
+           degreeTb$moduleAge[i] = max(age, na.rm=T) #maximum intxn age is the module age
+         } else {# when no active intxn is available 
+           degreeTb$moduleAge[i] = 0; #this module is born dead.
+         }
+       } else { # for degree < threshold, no stochasticity is applied. 
+         degreeTb$moduleAge[i] = max(age, na.rm=T) #maximum intxn age is the module age
+       }
+     } else {# non-essential node
+       degreeTb$moduleAge[i] = NA 
+     }
+   }
+   
+   summary(degreeTb)
+   currentNetworkAge = min(degreeTb$moduleAge, na.rm=T)
+ }
> #                    1                     2           3      4           5          6   7     8
> # R -f file --args pairwise-networkFile LookUpTbFile lambda1 lambda2 degreeThreshold p popSize outputdir
> # R -f 20151215-netsim-generic.R --args net1/Degree4N1000_network.csv  net1/net1/Degree4N1000_EssenLookupTb.csv 0.002 0.0002 5 1.0 1000 net1
> # R -f 20151215-netsim-generic.R --args data/merged_PPIGIN_Factorized2015Oct13.csv data/essntialGeneLookupTable_20151013.csv   0.002 0.0002 4 0.9 5
> 
> options(echo=TRUE) # if you want see commands in output file
> args <- commandArgs(trailingOnly = TRUE)
> print(args)
[1] "net1/Degree4N1000_network.csv"           
[2] "net1/net1/Degree4N1000_EssenLookupTb.csv"
[3] "0.002"                                   
[4] "0.0002"                                  
[5] "5"                                       
[6] "0.95"                                    
[7] "1000"                                    
[8] "net1"                                    
> inNetworkFile = args[1];
> inLookupTbFile = args[2];
> lambda1 = as.numeric(args[3]); lambda1;
[1] 0.002
> lambda2 = as.numeric(args[4]); lambda2;
[1] 2e-04
> degreeThreshold = as.integer((args[5])); degreeThreshold
[1] 5
> p = as.numeric(args[6]); p;
[1] 0.95
> popSize = as.numeric(args[7]); popSize;
[1] 1000
> outputdir = args[8];
> 
> list.files(path='net1', )
[1] "Degree4N1000_EssenLookupTb.csv" "Degree4N1000_network.csv"      
> debug = 9; 
> 
> #essential gene info
> #essenTb = read.csv("data/SummaryRegressionHetHomFactorized2015Oct13.csv", colClasses=rep('character', 9))
> #essenLookupTb = read.csv("net1/Degree4N1000_EssenLookupTb.csv", row.names = 1)
> essenLookupTb = read.csv(inNetworkFile);
> essenLookupTb = essenLookupTb[,1];
> 
> # inNetworFile = "net1/Degree4N1000_network.csv"
> pairs = read.csv(inNetworkFile); 
> names(pairs) = c("No1", "No2")
>   print(head(pairs))
  No1  No2
1   1 1001
2   1 1002
3   1 1003
4   1 1004
5   2 1005
6   2 1006
>   if(debug==9) {     pairs = pairs[1:1000,]  }
>   pairs = pairs[ pairs$No1 != pairs$No2, ]  
> 
>   # label essential nodes, remove nonesse-nonessen pairs
>   pairs$essen1 = essenLookupTb[pairs$No1]
>   pairs$essen2 = essenLookupTb[pairs$No2]
>   #remove nonessen <-> nonessen intxn because they do not affect aging. 
>   pairs$remove = ifelse( pairs$essen1==F & pairs$essen2==F, T, F  )
>   pairs= pairs[! pairs$remove, ]  
>   # 31394 for one ms02 network
>   
>   #get connectivities per node
>   degreeTb = data.frame( table(c(pairs$No1, pairs$No2)))
>   summary(degreeTb); 
      Var1           Freq    
 1      :   1   Min.   :1.0  
 2      :   1   1st Qu.:1.0  
 3      :   1   Median :1.0  
 4      :   1   Mean   :1.6  
 5      :   1   3rd Qu.:1.0  
 6      :   1   Max.   :4.0  
 (Other):1244                
>   degreeTb[1:10,]
   Var1 Freq
1     1    4
2     2    4
3     3    4
4     4    4
5     5    4
6     6    4
7     7    4
8     8    4
9     9    4
10   10    4
>   
>       popAges = numeric(popSize)
>       time1 = date()
>       j=1; count = 0; 
>       while ((j <= popSize) && ( count < popSize*30)) {
+         count = count + 1;      
+         print(paste("count=",count))
+         currentNetworkAge = single_network_failure_v2(lambda1, lambda2, degreeThreshold, p, pairs, essenLookupTb)
+         if (currentNetworkAge > 0) {
+           popAges[j] = currentNetworkAge      
+           j = j+1
+         } 
+       }# end of j while-loop, population loop
[1] "count= 1"
[1] "count= 2"
[1] "count= 3"
[1] "count= 4"
[1] "count= 5"
[1] "count= 6"
[1] "count= 7"
[1] "count= 8"
[1] "count= 9"
[1] "count= 10"
[1] "count= 11"
[1] "count= 12"
[1] "count= 13"
[1] "count= 14"
[1] "count= 15"
[1] "count= 16"
[1] "count= 17"
[1] "count= 18"
[1] "count= 19"
[1] "count= 20"
[1] "count= 21"
[1] "count= 22"
[1] "count= 23"
[1] "count= 24"
[1] "count= 25"
[1] "count= 26"
[1] "count= 27"
[1] "count= 28"
[1] "count= 29"
[1] "count= 30"
[1] "count= 31"
[1] "count= 32"
[1] "count= 33"
[1] "count= 34"
[1] "count= 35"
[1] "count= 36"
[1] "count= 37"
[1] "count= 38"
[1] "count= 39"
[1] "count= 40"
[1] "count= 41"
[1] "count= 42"
[1] "count= 43"
[1] "count= 44"
[1] "count= 45"
[1] "count= 46"
[1] "count= 47"
[1] "count= 48"
[1] "count= 49"
[1] "count= 50"
[1] "count= 51"
[1] "count= 52"
[1] "count= 53"
[1] "count= 54"
[1] "count= 55"
[1] "count= 56"
[1] "count= 57"
[1] "count= 58"
[1] "count= 59"
[1] "count= 60"
[1] "count= 61"
[1] "count= 62"
[1] "count= 63"
[1] "count= 64"
[1] "count= 65"
[1] "count= 66"
[1] "count= 67"
[1] "count= 68"
[1] "count= 69"
[1] "count= 70"
[1] "count= 71"
[1] "count= 72"
[1] "count= 73"
[1] "count= 74"
[1] "count= 75"
[1] "count= 76"
[1] "count= 77"
[1] "count= 78"
[1] "count= 79"
[1] "count= 80"
[1] "count= 81"
[1] "count= 82"
[1] "count= 83"
[1] "count= 84"
[1] "count= 85"
[1] "count= 86"
[1] "count= 87"
[1] "count= 88"
[1] "count= 89"
[1] "count= 90"
[1] "count= 91"
[1] "count= 92"
[1] "count= 93"
[1] "count= 94"
[1] "count= 95"
[1] "count= 96"
[1] "count= 97"
[1] "count= 98"
[1] "count= 99"
[1] "count= 100"
[1] "count= 101"
[1] "count= 102"
[1] "count= 103"
[1] "count= 104"
[1] "count= 105"
[1] "count= 106"
[1] "count= 107"
[1] "count= 108"
[1] "count= 109"
[1] "count= 110"
[1] "count= 111"
[1] "count= 112"
[1] "count= 113"
[1] "count= 114"
[1] "count= 115"
[1] "count= 116"
[1] "count= 117"
[1] "count= 118"
[1] "count= 119"
[1] "count= 120"
[1] "count= 121"
[1] "count= 122"
[1] "count= 123"
[1] "count= 124"
[1] "count= 125"
[1] "count= 126"
[1] "count= 127"
[1] "count= 128"
[1] "count= 129"
[1] "count= 130"
[1] "count= 131"
[1] "count= 132"
[1] "count= 133"
[1] "count= 134"
[1] "count= 135"
[1] "count= 136"
[1] "count= 137"
[1] "count= 138"
[1] "count= 139"
[1] "count= 140"
[1] "count= 141"
[1] "count= 142"
[1] "count= 143"
[1] "count= 144"
[1] "count= 145"
[1] "count= 146"
[1] "count= 147"
[1] "count= 148"
[1] "count= 149"
[1] "count= 150"
[1] "count= 151"
[1] "count= 152"
[1] "count= 153"
[1] "count= 154"
[1] "count= 155"
[1] "count= 156"
[1] "count= 157"
[1] "count= 158"
[1] "count= 159"
[1] "count= 160"
[1] "count= 161"
[1] "count= 162"
[1] "count= 163"
[1] "count= 164"
[1] "count= 165"
[1] "count= 166"
[1] "count= 167"
[1] "count= 168"
[1] "count= 169"
[1] "count= 170"
[1] "count= 171"
[1] "count= 172"
[1] "count= 173"
[1] "count= 174"
[1] "count= 175"
[1] "count= 176"
[1] "count= 177"
[1] "count= 178"
[1] "count= 179"
[1] "count= 180"
[1] "count= 181"
[1] "count= 182"
[1] "count= 183"
[1] "count= 184"
[1] "count= 185"
[1] "count= 186"
[1] "count= 187"
[1] "count= 188"
[1] "count= 189"
[1] "count= 190"
[1] "count= 191"
[1] "count= 192"
[1] "count= 193"
[1] "count= 194"
[1] "count= 195"
[1] "count= 196"
[1] "count= 197"
[1] "count= 198"
[1] "count= 199"
[1] "count= 200"
[1] "count= 201"
[1] "count= 202"
[1] "count= 203"
[1] "count= 204"
[1] "count= 205"
[1] "count= 206"
[1] "count= 207"
[1] "count= 208"
[1] "count= 209"
[1] "count= 210"
[1] "count= 211"
[1] "count= 212"
[1] "count= 213"
[1] "count= 214"
[1] "count= 215"
[1] "count= 216"
[1] "count= 217"
[1] "count= 218"
[1] "count= 219"
[1] "count= 220"
[1] "count= 221"
[1] "count= 222"
[1] "count= 223"
[1] "count= 224"
[1] "count= 225"
[1] "count= 226"
[1] "count= 227"
[1] "count= 228"
[1] "count= 229"
[1] "count= 230"
[1] "count= 231"
[1] "count= 232"
[1] "count= 233"
[1] "count= 234"
[1] "count= 235"
[1] "count= 236"
[1] "count= 237"
[1] "count= 238"
[1] "count= 239"
[1] "count= 240"
[1] "count= 241"
[1] "count= 242"
[1] "count= 243"
[1] "count= 244"
[1] "count= 245"
[1] "count= 246"
[1] "count= 247"
[1] "count= 248"
[1] "count= 249"
[1] "count= 250"
[1] "count= 251"
[1] "count= 252"
[1] "count= 253"
[1] "count= 254"
[1] "count= 255"
[1] "count= 256"
[1] "count= 257"
[1] "count= 258"
[1] "count= 259"
[1] "count= 260"
[1] "count= 261"
[1] "count= 262"
[1] "count= 263"
[1] "count= 264"
[1] "count= 265"
[1] "count= 266"
[1] "count= 267"
[1] "count= 268"
[1] "count= 269"
[1] "count= 270"
[1] "count= 271"
[1] "count= 272"
[1] "count= 273"
[1] "count= 274"
[1] "count= 275"
[1] "count= 276"
[1] "count= 277"
[1] "count= 278"
[1] "count= 279"
[1] "count= 280"
[1] "count= 281"
[1] "count= 282"
[1] "count= 283"
[1] "count= 284"
[1] "count= 285"
[1] "count= 286"
[1] "count= 287"
[1] "count= 288"
[1] "count= 289"
[1] "count= 290"
[1] "count= 291"
[1] "count= 292"
[1] "count= 293"
[1] "count= 294"
[1] "count= 295"
[1] "count= 296"
[1] "count= 297"
[1] "count= 298"
[1] "count= 299"
[1] "count= 300"
[1] "count= 301"
[1] "count= 302"
[1] "count= 303"
[1] "count= 304"
[1] "count= 305"
[1] "count= 306"
[1] "count= 307"
[1] "count= 308"
[1] "count= 309"
[1] "count= 310"
[1] "count= 311"
[1] "count= 312"
[1] "count= 313"
[1] "count= 314"
[1] "count= 315"
[1] "count= 316"
[1] "count= 317"
[1] "count= 318"
[1] "count= 319"
[1] "count= 320"
[1] "count= 321"
[1] "count= 322"
[1] "count= 323"
[1] "count= 324"
[1] "count= 325"
[1] "count= 326"
[1] "count= 327"
[1] "count= 328"
[1] "count= 329"
[1] "count= 330"
[1] "count= 331"
[1] "count= 332"
[1] "count= 333"
[1] "count= 334"
[1] "count= 335"
[1] "count= 336"
[1] "count= 337"
[1] "count= 338"
[1] "count= 339"
[1] "count= 340"
[1] "count= 341"
[1] "count= 342"
[1] "count= 343"
[1] "count= 344"
[1] "count= 345"
[1] "count= 346"
[1] "count= 347"
[1] "count= 348"
[1] "count= 349"
[1] "count= 350"
[1] "count= 351"
[1] "count= 352"
[1] "count= 353"
[1] "count= 354"
[1] "count= 355"
[1] "count= 356"
[1] "count= 357"
[1] "count= 358"
[1] "count= 359"
[1] "count= 360"
[1] "count= 361"
[1] "count= 362"
[1] "count= 363"
[1] "count= 364"
[1] "count= 365"
[1] "count= 366"
[1] "count= 367"
[1] "count= 368"
[1] "count= 369"
[1] "count= 370"
[1] "count= 371"
[1] "count= 372"
[1] "count= 373"
[1] "count= 374"
[1] "count= 375"
[1] "count= 376"
[1] "count= 377"
[1] "count= 378"
[1] "count= 379"
[1] "count= 380"
[1] "count= 381"
[1] "count= 382"
[1] "count= 383"
[1] "count= 384"
[1] "count= 385"
[1] "count= 386"
[1] "count= 387"
[1] "count= 388"
[1] "count= 389"
[1] "count= 390"
[1] "count= 391"
[1] "count= 392"
[1] "count= 393"
[1] "count= 394"
[1] "count= 395"
[1] "count= 396"
[1] "count= 397"
[1] "count= 398"
[1] "count= 399"
[1] "count= 400"
[1] "count= 401"
[1] "count= 402"
[1] "count= 403"
[1] "count= 404"
[1] "count= 405"
[1] "count= 406"
[1] "count= 407"
[1] "count= 408"
[1] "count= 409"
[1] "count= 410"
[1] "count= 411"
[1] "count= 412"
[1] "count= 413"
[1] "count= 414"
[1] "count= 415"
[1] "count= 416"
[1] "count= 417"
[1] "count= 418"
[1] "count= 419"
[1] "count= 420"
[1] "count= 421"
[1] "count= 422"
[1] "count= 423"
[1] "count= 424"
[1] "count= 425"
[1] "count= 426"
[1] "count= 427"
[1] "count= 428"
[1] "count= 429"
[1] "count= 430"
[1] "count= 431"
[1] "count= 432"
[1] "count= 433"
[1] "count= 434"
[1] "count= 435"
[1] "count= 436"
[1] "count= 437"
[1] "count= 438"
[1] "count= 439"
[1] "count= 440"
[1] "count= 441"
[1] "count= 442"
[1] "count= 443"
[1] "count= 444"
[1] "count= 445"
[1] "count= 446"
[1] "count= 447"
[1] "count= 448"
[1] "count= 449"
[1] "count= 450"
[1] "count= 451"
[1] "count= 452"
[1] "count= 453"
[1] "count= 454"
[1] "count= 455"
[1] "count= 456"
[1] "count= 457"
[1] "count= 458"
[1] "count= 459"
[1] "count= 460"
[1] "count= 461"
[1] "count= 462"
[1] "count= 463"
[1] "count= 464"
[1] "count= 465"
[1] "count= 466"
[1] "count= 467"
[1] "count= 468"
[1] "count= 469"
[1] "count= 470"
[1] "count= 471"
[1] "count= 472"
[1] "count= 473"
[1] "count= 474"
[1] "count= 475"
[1] "count= 476"
[1] "count= 477"
[1] "count= 478"
[1] "count= 479"
[1] "count= 480"
[1] "count= 481"
[1] "count= 482"
[1] "count= 483"
[1] "count= 484"
[1] "count= 485"
[1] "count= 486"
[1] "count= 487"
[1] "count= 488"
[1] "count= 489"
[1] "count= 490"
[1] "count= 491"
[1] "count= 492"
[1] "count= 493"
[1] "count= 494"
[1] "count= 495"
[1] "count= 496"
[1] "count= 497"
[1] "count= 498"
[1] "count= 499"
[1] "count= 500"
[1] "count= 501"
[1] "count= 502"
[1] "count= 503"
[1] "count= 504"
[1] "count= 505"
[1] "count= 506"
[1] "count= 507"
[1] "count= 508"
[1] "count= 509"
[1] "count= 510"
[1] "count= 511"
[1] "count= 512"
[1] "count= 513"
[1] "count= 514"
[1] "count= 515"
[1] "count= 516"
[1] "count= 517"
[1] "count= 518"
[1] "count= 519"
[1] "count= 520"
[1] "count= 521"
[1] "count= 522"
[1] "count= 523"
[1] "count= 524"
[1] "count= 525"
[1] "count= 526"
[1] "count= 527"
[1] "count= 528"
[1] "count= 529"
[1] "count= 530"
[1] "count= 531"
[1] "count= 532"
[1] "count= 533"
[1] "count= 534"
[1] "count= 535"
[1] "count= 536"
[1] "count= 537"
[1] "count= 538"
[1] "count= 539"
[1] "count= 540"
[1] "count= 541"
[1] "count= 542"
[1] "count= 543"
[1] "count= 544"
[1] "count= 545"
[1] "count= 546"
[1] "count= 547"
[1] "count= 548"
[1] "count= 549"
[1] "count= 550"
[1] "count= 551"
[1] "count= 552"
[1] "count= 553"
[1] "count= 554"
[1] "count= 555"
[1] "count= 556"
[1] "count= 557"
[1] "count= 558"
[1] "count= 559"
[1] "count= 560"
[1] "count= 561"
[1] "count= 562"
[1] "count= 563"
[1] "count= 564"
[1] "count= 565"
[1] "count= 566"
[1] "count= 567"
[1] "count= 568"
[1] "count= 569"
[1] "count= 570"
[1] "count= 571"
[1] "count= 572"
[1] "count= 573"
[1] "count= 574"
[1] "count= 575"
[1] "count= 576"
[1] "count= 577"
[1] "count= 578"
[1] "count= 579"
[1] "count= 580"
[1] "count= 581"
[1] "count= 582"
[1] "count= 583"
[1] "count= 584"
[1] "count= 585"
[1] "count= 586"
[1] "count= 587"
[1] "count= 588"
[1] "count= 589"
[1] "count= 590"
[1] "count= 591"
[1] "count= 592"
[1] "count= 593"
[1] "count= 594"
[1] "count= 595"
[1] "count= 596"
[1] "count= 597"
[1] "count= 598"
[1] "count= 599"
[1] "count= 600"
[1] "count= 601"
[1] "count= 602"
[1] "count= 603"
[1] "count= 604"
[1] "count= 605"
[1] "count= 606"
[1] "count= 607"
[1] "count= 608"
[1] "count= 609"
[1] "count= 610"
[1] "count= 611"
[1] "count= 612"
[1] "count= 613"
[1] "count= 614"
[1] "count= 615"
[1] "count= 616"
[1] "count= 617"
[1] "count= 618"
[1] "count= 619"
[1] "count= 620"
[1] "count= 621"
[1] "count= 622"
[1] "count= 623"
[1] "count= 624"
[1] "count= 625"
[1] "count= 626"
[1] "count= 627"
[1] "count= 628"
[1] "count= 629"
[1] "count= 630"
[1] "count= 631"
[1] "count= 632"
[1] "count= 633"
[1] "count= 634"
[1] "count= 635"
[1] "count= 636"
[1] "count= 637"
[1] "count= 638"
[1] "count= 639"
[1] "count= 640"
[1] "count= 641"
[1] "count= 642"
[1] "count= 643"
[1] "count= 644"
[1] "count= 645"
[1] "count= 646"
[1] "count= 647"
[1] "count= 648"
[1] "count= 649"
[1] "count= 650"
[1] "count= 651"
[1] "count= 652"
[1] "count= 653"
[1] "count= 654"
[1] "count= 655"
[1] "count= 656"
[1] "count= 657"
[1] "count= 658"
[1] "count= 659"
[1] "count= 660"
[1] "count= 661"
[1] "count= 662"
[1] "count= 663"
[1] "count= 664"
[1] "count= 665"
[1] "count= 666"
[1] "count= 667"
[1] "count= 668"
[1] "count= 669"
[1] "count= 670"
[1] "count= 671"
[1] "count= 672"
[1] "count= 673"
[1] "count= 674"
[1] "count= 675"
[1] "count= 676"
[1] "count= 677"
[1] "count= 678"
[1] "count= 679"
[1] "count= 680"
[1] "count= 681"
[1] "count= 682"
[1] "count= 683"
[1] "count= 684"
[1] "count= 685"
[1] "count= 686"
[1] "count= 687"
[1] "count= 688"
[1] "count= 689"
[1] "count= 690"
[1] "count= 691"
[1] "count= 692"
[1] "count= 693"
[1] "count= 694"
[1] "count= 695"
[1] "count= 696"
[1] "count= 697"
[1] "count= 698"
[1] "count= 699"
[1] "count= 700"
[1] "count= 701"
[1] "count= 702"
[1] "count= 703"
[1] "count= 704"
[1] "count= 705"
[1] "count= 706"
[1] "count= 707"
[1] "count= 708"
[1] "count= 709"
[1] "count= 710"
[1] "count= 711"
[1] "count= 712"
[1] "count= 713"
[1] "count= 714"
[1] "count= 715"
[1] "count= 716"
[1] "count= 717"
[1] "count= 718"
[1] "count= 719"
[1] "count= 720"
[1] "count= 721"
[1] "count= 722"
[1] "count= 723"
[1] "count= 724"
[1] "count= 725"
[1] "count= 726"
[1] "count= 727"
[1] "count= 728"
[1] "count= 729"
[1] "count= 730"
[1] "count= 731"
[1] "count= 732"
[1] "count= 733"
[1] "count= 734"
[1] "count= 735"
[1] "count= 736"
[1] "count= 737"
[1] "count= 738"
[1] "count= 739"
[1] "count= 740"
[1] "count= 741"
[1] "count= 742"
[1] "count= 743"
[1] "count= 744"
[1] "count= 745"
[1] "count= 746"
[1] "count= 747"
[1] "count= 748"
[1] "count= 749"
[1] "count= 750"
[1] "count= 751"
[1] "count= 752"
[1] "count= 753"
[1] "count= 754"
[1] "count= 755"
[1] "count= 756"
[1] "count= 757"
[1] "count= 758"
[1] "count= 759"
[1] "count= 760"
[1] "count= 761"
[1] "count= 762"
[1] "count= 763"
[1] "count= 764"
[1] "count= 765"
[1] "count= 766"
[1] "count= 767"
[1] "count= 768"
[1] "count= 769"
[1] "count= 770"
[1] "count= 771"
[1] "count= 772"
[1] "count= 773"
[1] "count= 774"
[1] "count= 775"
[1] "count= 776"
[1] "count= 777"
[1] "count= 778"
[1] "count= 779"
[1] "count= 780"
[1] "count= 781"
[1] "count= 782"
[1] "count= 783"
[1] "count= 784"
[1] "count= 785"
[1] "count= 786"
[1] "count= 787"
[1] "count= 788"
[1] "count= 789"
[1] "count= 790"
[1] "count= 791"
[1] "count= 792"
[1] "count= 793"
[1] "count= 794"
[1] "count= 795"
[1] "count= 796"
[1] "count= 797"
[1] "count= 798"
[1] "count= 799"
[1] "count= 800"
[1] "count= 801"
[1] "count= 802"
[1] "count= 803"
[1] "count= 804"
[1] "count= 805"
[1] "count= 806"
[1] "count= 807"
[1] "count= 808"
[1] "count= 809"
[1] "count= 810"
[1] "count= 811"
[1] "count= 812"
[1] "count= 813"
[1] "count= 814"
[1] "count= 815"
[1] "count= 816"
[1] "count= 817"
[1] "count= 818"
[1] "count= 819"
[1] "count= 820"
[1] "count= 821"
[1] "count= 822"
[1] "count= 823"
[1] "count= 824"
[1] "count= 825"
[1] "count= 826"
[1] "count= 827"
[1] "count= 828"
[1] "count= 829"
[1] "count= 830"
[1] "count= 831"
[1] "count= 832"
[1] "count= 833"
[1] "count= 834"
[1] "count= 835"
[1] "count= 836"
[1] "count= 837"
[1] "count= 838"
[1] "count= 839"
[1] "count= 840"
[1] "count= 841"
[1] "count= 842"
[1] "count= 843"
[1] "count= 844"
[1] "count= 845"
[1] "count= 846"
[1] "count= 847"
[1] "count= 848"
[1] "count= 849"
[1] "count= 850"
[1] "count= 851"
[1] "count= 852"
[1] "count= 853"
[1] "count= 854"
[1] "count= 855"
[1] "count= 856"
[1] "count= 857"
[1] "count= 858"
[1] "count= 859"
[1] "count= 860"
[1] "count= 861"
[1] "count= 862"
[1] "count= 863"
[1] "count= 864"
[1] "count= 865"
[1] "count= 866"
[1] "count= 867"
[1] "count= 868"
[1] "count= 869"
[1] "count= 870"
[1] "count= 871"
[1] "count= 872"
[1] "count= 873"
[1] "count= 874"
[1] "count= 875"
[1] "count= 876"
[1] "count= 877"
[1] "count= 878"
[1] "count= 879"
[1] "count= 880"
[1] "count= 881"
[1] "count= 882"
[1] "count= 883"
[1] "count= 884"
[1] "count= 885"
[1] "count= 886"
[1] "count= 887"
[1] "count= 888"
[1] "count= 889"
[1] "count= 890"
[1] "count= 891"
[1] "count= 892"
[1] "count= 893"
[1] "count= 894"
[1] "count= 895"
[1] "count= 896"
[1] "count= 897"
[1] "count= 898"
[1] "count= 899"
[1] "count= 900"
[1] "count= 901"
[1] "count= 902"
[1] "count= 903"
[1] "count= 904"
[1] "count= 905"
[1] "count= 906"
[1] "count= 907"
[1] "count= 908"
[1] "count= 909"
[1] "count= 910"
[1] "count= 911"
[1] "count= 912"
[1] "count= 913"
[1] "count= 914"
[1] "count= 915"
[1] "count= 916"
[1] "count= 917"
[1] "count= 918"
[1] "count= 919"
[1] "count= 920"
[1] "count= 921"
[1] "count= 922"
[1] "count= 923"
[1] "count= 924"
[1] "count= 925"
[1] "count= 926"
[1] "count= 927"
[1] "count= 928"
[1] "count= 929"
[1] "count= 930"
[1] "count= 931"
[1] "count= 932"
[1] "count= 933"
[1] "count= 934"
[1] "count= 935"
[1] "count= 936"
[1] "count= 937"
[1] "count= 938"
[1] "count= 939"
[1] "count= 940"
[1] "count= 941"
[1] "count= 942"
[1] "count= 943"
[1] "count= 944"
[1] "count= 945"
[1] "count= 946"
[1] "count= 947"
[1] "count= 948"
[1] "count= 949"
[1] "count= 950"
[1] "count= 951"
[1] "count= 952"
[1] "count= 953"
[1] "count= 954"
[1] "count= 955"
[1] "count= 956"
[1] "count= 957"
[1] "count= 958"
[1] "count= 959"
[1] "count= 960"
[1] "count= 961"
[1] "count= 962"
[1] "count= 963"
[1] "count= 964"
[1] "count= 965"
[1] "count= 966"
[1] "count= 967"
[1] "count= 968"
[1] "count= 969"
[1] "count= 970"
[1] "count= 971"
[1] "count= 972"
[1] "count= 973"
[1] "count= 974"
[1] "count= 975"
[1] "count= 976"
[1] "count= 977"
[1] "count= 978"
[1] "count= 979"
[1] "count= 980"
[1] "count= 981"
[1] "count= 982"
[1] "count= 983"
[1] "count= 984"
[1] "count= 985"
[1] "count= 986"
[1] "count= 987"
[1] "count= 988"
[1] "count= 989"
[1] "count= 990"
[1] "count= 991"
[1] "count= 992"
[1] "count= 993"
[1] "count= 994"
[1] "count= 995"
[1] "count= 996"
[1] "count= 997"
[1] "count= 998"
[1] "count= 999"
[1] "count= 1000"
>       
>       timestamp = format(Sys.time(), "%Y%b%d_%H%M%S")
>       age.file.name=paste("threshold", degreeThreshold, "p", p, "lambda1", lambda1, 
+                           "lambda2", lambda2,'popsize',popSize, "time",timestamp, "csv", sep="." )
>       full_age_file = paste( outputdir, '/', age.file.name, sep='')
>       
>       write.csv( popAges, full_age_file, row.names=F)
>       
> 

R version 3.2.1 (2015-06-18) -- "World-Famous Astronaut"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> ##########################################
> #2015Dec a generic network simulation code with files names as input
> #2015Oct13, use numeric lookup table for essential genes.
> #2014March3, redo ginppi simulation witht same parameter for ms02networks. 
> # 2014 Feb 17, change name "20131221.DIPandGIN.sim.aging_v2.R" to "net-aging-sim-2014Feb17.R"
> # 2013 Dec 20, merge DIP PPI and Genetic Inxt Net -> Multi-net approach
> #rm(list=ls())
> 
> single_network_failure_v2 = function(lambda1, lambda2=lambda1/10, threshold=4, p, pairs, essenLookupTb ) {
+   # single network failure simulation, 20151013Tue
+   # lambda1: First exponential constant failure rate for edges with degree > threshold
+   # lambda2: Second exponential constant failure rate for edges with degree <= threshold
+   # threshold: degree threshold for lambda1 and lambda2
+   # pairs: network in pairwide format, using numeric NOs 20151013
+   # essenLookupTb: lookup table for essential and nonessential genes, numeric values 
+   ## for debug:   lambda1 = 1/50; lambda2= lambda1/10; threshold=4; p=0.8
+   
+   inpairs = pairs[,3:4] #bookkeeping  
+   names(inpairs) = c('No1','No2')
+   
+   #get connectivities per node
+   degreeTb = data.frame( table(c(inpairs$No1, inpairs$No2)))
+   names(degreeTb) = c("No", "degree")
+   degreeTb$moduleAge = NA;
+   
+   for( i in 1:length(degreeTb[,1])){
+     if ( essenLookupTb[ degreeTb$No[i] ]) { #essential node
+       lambda = ifelse( degreeTb$degree[i] >= threshold, lambda1, lambda2)
+       age = rexp( degreeTb$degree[i], rate=lambda ) #exponential age
+       if(degreeTb$degree[i] >= threshold){
+         active = runif(degreeTb$degree[i])  #uniform interaction stochasticity
+         active = ifelse( active<=p, 1, NA  ) #pick active interactions
+         if( sum(active, na.rm=T) > 0 ){ #there should be at least 1 active intxn
+           age = age * active # only active interactions for modular age estimation
+           degreeTb$moduleAge[i] = max(age, na.rm=T) #maximum intxn age is the module age
+         } else {# when no active intxn is available 
+           degreeTb$moduleAge[i] = 0; #this module is born dead.
+         }
+       } else { # for degree < threshold, no stochasticity is applied. 
+         degreeTb$moduleAge[i] = max(age, na.rm=T) #maximum intxn age is the module age
+       }
+     } else {# non-essential node
+       degreeTb$moduleAge[i] = NA 
+     }
+   }
+   
+   summary(degreeTb)
+   currentNetworkAge = min(degreeTb$moduleAge, na.rm=T)
+ }
> #                    1                     2           3      4           5          6   7     8
> # R -f file --args pairwise-networkFile LookUpTbFile lambda1 lambda2 degreeThreshold p popSize outputdir
> # R -f 20151215-netsim-generic.R --args net1/Degree4N1000_network.csv  net1/net1/Degree4N1000_EssenLookupTb.csv 0.002 0.0002 5 1.0 1000 net1
> # R -f 20151215-netsim-generic.R --args data/merged_PPIGIN_Factorized2015Oct13.csv data/essntialGeneLookupTable_20151013.csv   0.002 0.0002 4 0.9 5
> 
> options(echo=TRUE) # if you want see commands in output file
> args <- commandArgs(trailingOnly = TRUE)
> print(args)
[1] "net1/Degree4N1000_network.csv"           
[2] "net1/net1/Degree4N1000_EssenLookupTb.csv"
[3] "0.002"                                   
[4] "0.0002"                                  
[5] "5"                                       
[6] "0.9"                                     
[7] "1000"                                    
[8] "net1"                                    
> inNetworkFile = args[1];
> inLookupTbFile = args[2];
> lambda1 = as.numeric(args[3]); lambda1;
[1] 0.002
> lambda2 = as.numeric(args[4]); lambda2;
[1] 2e-04
> degreeThreshold = as.integer((args[5])); degreeThreshold
[1] 5
> p = as.numeric(args[6]); p;
[1] 0.9
> popSize = as.numeric(args[7]); popSize;
[1] 1000
> outputdir = args[8];
> 
> list.files(path='net1', )
[1] "Degree4N1000_EssenLookupTb.csv"                                                       
[2] "Degree4N1000_network.csv"                                                             
[3] "threshold.5.p.0.95.lambda1.0.002.lambda2.2e-04.popsize.1000.time.2015Dec16_094923.csv"
> debug = 9; 
> 
> #essential gene info
> #essenTb = read.csv("data/SummaryRegressionHetHomFactorized2015Oct13.csv", colClasses=rep('character', 9))
> #essenLookupTb = read.csv("net1/Degree4N1000_EssenLookupTb.csv", row.names = 1)
> essenLookupTb = read.csv(inNetworkFile);
> essenLookupTb = essenLookupTb[,1];
> 
> # inNetworFile = "net1/Degree4N1000_network.csv"
> pairs = read.csv(inNetworkFile); 
> names(pairs) = c("No1", "No2")
>   print(head(pairs))
  No1  No2
1   1 1001
2   1 1002
3   1 1003
4   1 1004
5   2 1005
6   2 1006
>   if(debug==9) {     pairs = pairs[1:1000,]  }
>   pairs = pairs[ pairs$No1 != pairs$No2, ]  
> 
>   # label essential nodes, remove nonesse-nonessen pairs
>   pairs$essen1 = essenLookupTb[pairs$No1]
>   pairs$essen2 = essenLookupTb[pairs$No2]
>   #remove nonessen <-> nonessen intxn because they do not affect aging. 
>   pairs$remove = ifelse( pairs$essen1==F & pairs$essen2==F, T, F  )
>   pairs= pairs[! pairs$remove, ]  
>   # 31394 for one ms02 network
>   
>   #get connectivities per node
>   degreeTb = data.frame( table(c(pairs$No1, pairs$No2)))
>   summary(degreeTb); 
      Var1           Freq    
 1      :   1   Min.   :1.0  
 2      :   1   1st Qu.:1.0  
 3      :   1   Median :1.0  
 4      :   1   Mean   :1.6  
 5      :   1   3rd Qu.:1.0  
 6      :   1   Max.   :4.0  
 (Other):1244                
>   degreeTb[1:10,]
   Var1 Freq
1     1    4
2     2    4
3     3    4
4     4    4
5     5    4
6     6    4
7     7    4
8     8    4
9     9    4
10   10    4
>   
>       popAges = numeric(popSize)
>       time1 = date()
>       j=1; count = 0; 
>       while ((j <= popSize) && ( count < popSize*30)) {
+         count = count + 1;      
+         print(paste("count=",count))
+         currentNetworkAge = single_network_failure_v2(lambda1, lambda2, degreeThreshold, p, pairs, essenLookupTb)
+         if (currentNetworkAge > 0) {
+           popAges[j] = currentNetworkAge      
+           j = j+1
+         } 
+       }# end of j while-loop, population loop
[1] "count= 1"
[1] "count= 2"
[1] "count= 3"
[1] "count= 4"
[1] "count= 5"
[1] "count= 6"
[1] "count= 7"
[1] "count= 8"
[1] "count= 9"
[1] "count= 10"
[1] "count= 11"
[1] "count= 12"
[1] "count= 13"
[1] "count= 14"
[1] "count= 15"
[1] "count= 16"
[1] "count= 17"
[1] "count= 18"
[1] "count= 19"
[1] "count= 20"
[1] "count= 21"
[1] "count= 22"
[1] "count= 23"
[1] "count= 24"
[1] "count= 25"
[1] "count= 26"
[1] "count= 27"
[1] "count= 28"
[1] "count= 29"
[1] "count= 30"
[1] "count= 31"
[1] "count= 32"
[1] "count= 33"
[1] "count= 34"
[1] "count= 35"
[1] "count= 36"
[1] "count= 37"
[1] "count= 38"
[1] "count= 39"
[1] "count= 40"
[1] "count= 41"
[1] "count= 42"
[1] "count= 43"
[1] "count= 44"
[1] "count= 45"
[1] "count= 46"
[1] "count= 47"
[1] "count= 48"
[1] "count= 49"
[1] "count= 50"
[1] "count= 51"
[1] "count= 52"
[1] "count= 53"
[1] "count= 54"
[1] "count= 55"
[1] "count= 56"
[1] "count= 57"
[1] "count= 58"
[1] "count= 59"
[1] "count= 60"
[1] "count= 61"
[1] "count= 62"
[1] "count= 63"
[1] "count= 64"
[1] "count= 65"
[1] "count= 66"
[1] "count= 67"
[1] "count= 68"
[1] "count= 69"
[1] "count= 70"
[1] "count= 71"
[1] "count= 72"
[1] "count= 73"
[1] "count= 74"
[1] "count= 75"
[1] "count= 76"
[1] "count= 77"
[1] "count= 78"
[1] "count= 79"
[1] "count= 80"
[1] "count= 81"
[1] "count= 82"
[1] "count= 83"
[1] "count= 84"
[1] "count= 85"
[1] "count= 86"
[1] "count= 87"
[1] "count= 88"
[1] "count= 89"
[1] "count= 90"
[1] "count= 91"
[1] "count= 92"
[1] "count= 93"
[1] "count= 94"
[1] "count= 95"
[1] "count= 96"
[1] "count= 97"
[1] "count= 98"
[1] "count= 99"
[1] "count= 100"
[1] "count= 101"
[1] "count= 102"
[1] "count= 103"
[1] "count= 104"
[1] "count= 105"
[1] "count= 106"
[1] "count= 107"
[1] "count= 108"
[1] "count= 109"
[1] "count= 110"
[1] "count= 111"
[1] "count= 112"
[1] "count= 113"
[1] "count= 114"
[1] "count= 115"
[1] "count= 116"
[1] "count= 117"
[1] "count= 118"
[1] "count= 119"
[1] "count= 120"
[1] "count= 121"
[1] "count= 122"
[1] "count= 123"
[1] "count= 124"
[1] "count= 125"
[1] "count= 126"
[1] "count= 127"
[1] "count= 128"
[1] "count= 129"
[1] "count= 130"
[1] "count= 131"
[1] "count= 132"
[1] "count= 133"
[1] "count= 134"
[1] "count= 135"
[1] "count= 136"
[1] "count= 137"
[1] "count= 138"
[1] "count= 139"
[1] "count= 140"
[1] "count= 141"
[1] "count= 142"
[1] "count= 143"
[1] "count= 144"
[1] "count= 145"
[1] "count= 146"
[1] "count= 147"
[1] "count= 148"
[1] "count= 149"
[1] "count= 150"
[1] "count= 151"
[1] "count= 152"
[1] "count= 153"
[1] "count= 154"
[1] "count= 155"
[1] "count= 156"
[1] "count= 157"
[1] "count= 158"
[1] "count= 159"
[1] "count= 160"
[1] "count= 161"
[1] "count= 162"
[1] "count= 163"
[1] "count= 164"
[1] "count= 165"
[1] "count= 166"
[1] "count= 167"
[1] "count= 168"
[1] "count= 169"
[1] "count= 170"
[1] "count= 171"
[1] "count= 172"
[1] "count= 173"
[1] "count= 174"
[1] "count= 175"
[1] "count= 176"
[1] "count= 177"
[1] "count= 178"
[1] "count= 179"
[1] "count= 180"
[1] "count= 181"
[1] "count= 182"
[1] "count= 183"
[1] "count= 184"
[1] "count= 185"
[1] "count= 186"
[1] "count= 187"
[1] "count= 188"
[1] "count= 189"
[1] "count= 190"
[1] "count= 191"
[1] "count= 192"
[1] "count= 193"
[1] "count= 194"
[1] "count= 195"
[1] "count= 196"
[1] "count= 197"
[1] "count= 198"
[1] "count= 199"
[1] "count= 200"
[1] "count= 201"
[1] "count= 202"
[1] "count= 203"
[1] "count= 204"
[1] "count= 205"
[1] "count= 206"
[1] "count= 207"
[1] "count= 208"
[1] "count= 209"
[1] "count= 210"
[1] "count= 211"
[1] "count= 212"
[1] "count= 213"
[1] "count= 214"
[1] "count= 215"
[1] "count= 216"
[1] "count= 217"
[1] "count= 218"
[1] "count= 219"
[1] "count= 220"
[1] "count= 221"
[1] "count= 222"
[1] "count= 223"
[1] "count= 224"
[1] "count= 225"
[1] "count= 226"
[1] "count= 227"
[1] "count= 228"
[1] "count= 229"
[1] "count= 230"
[1] "count= 231"
[1] "count= 232"
[1] "count= 233"
[1] "count= 234"
[1] "count= 235"
[1] "count= 236"
[1] "count= 237"
[1] "count= 238"
[1] "count= 239"
[1] "count= 240"
[1] "count= 241"
[1] "count= 242"
[1] "count= 243"
[1] "count= 244"
[1] "count= 245"
[1] "count= 246"
[1] "count= 247"
[1] "count= 248"
[1] "count= 249"
[1] "count= 250"
[1] "count= 251"
[1] "count= 252"
[1] "count= 253"
[1] "count= 254"
[1] "count= 255"
[1] "count= 256"
[1] "count= 257"
[1] "count= 258"
[1] "count= 259"
[1] "count= 260"
[1] "count= 261"
[1] "count= 262"
[1] "count= 263"
[1] "count= 264"
[1] "count= 265"
[1] "count= 266"
[1] "count= 267"
[1] "count= 268"
[1] "count= 269"
[1] "count= 270"
[1] "count= 271"
[1] "count= 272"
[1] "count= 273"
[1] "count= 274"
[1] "count= 275"
[1] "count= 276"
[1] "count= 277"
[1] "count= 278"
[1] "count= 279"
[1] "count= 280"
[1] "count= 281"
[1] "count= 282"
[1] "count= 283"
[1] "count= 284"
[1] "count= 285"
[1] "count= 286"
[1] "count= 287"
[1] "count= 288"
[1] "count= 289"
[1] "count= 290"
[1] "count= 291"
[1] "count= 292"
[1] "count= 293"
[1] "count= 294"
[1] "count= 295"
[1] "count= 296"
[1] "count= 297"
[1] "count= 298"
[1] "count= 299"
[1] "count= 300"
[1] "count= 301"
[1] "count= 302"
[1] "count= 303"
[1] "count= 304"
[1] "count= 305"
[1] "count= 306"
[1] "count= 307"
[1] "count= 308"
[1] "count= 309"
[1] "count= 310"
[1] "count= 311"
[1] "count= 312"
[1] "count= 313"
[1] "count= 314"
[1] "count= 315"
[1] "count= 316"
[1] "count= 317"
[1] "count= 318"
[1] "count= 319"
[1] "count= 320"
[1] "count= 321"
[1] "count= 322"
[1] "count= 323"
[1] "count= 324"
[1] "count= 325"
[1] "count= 326"
[1] "count= 327"
[1] "count= 328"
[1] "count= 329"
[1] "count= 330"
[1] "count= 331"
[1] "count= 332"
[1] "count= 333"
[1] "count= 334"
[1] "count= 335"
[1] "count= 336"
[1] "count= 337"
[1] "count= 338"
[1] "count= 339"
[1] "count= 340"
[1] "count= 341"
[1] "count= 342"
[1] "count= 343"
[1] "count= 344"
[1] "count= 345"
[1] "count= 346"
[1] "count= 347"
[1] "count= 348"
[1] "count= 349"
[1] "count= 350"
[1] "count= 351"
[1] "count= 352"
[1] "count= 353"
[1] "count= 354"
[1] "count= 355"
[1] "count= 356"
[1] "count= 357"
[1] "count= 358"
[1] "count= 359"
[1] "count= 360"
[1] "count= 361"
[1] "count= 362"
[1] "count= 363"
[1] "count= 364"
[1] "count= 365"
[1] "count= 366"
[1] "count= 367"
[1] "count= 368"
[1] "count= 369"
[1] "count= 370"
[1] "count= 371"
[1] "count= 372"
[1] "count= 373"
[1] "count= 374"
[1] "count= 375"
[1] "count= 376"
[1] "count= 377"
[1] "count= 378"
[1] "count= 379"
[1] "count= 380"
[1] "count= 381"
[1] "count= 382"
[1] "count= 383"
[1] "count= 384"
[1] "count= 385"
[1] "count= 386"
[1] "count= 387"
[1] "count= 388"
[1] "count= 389"
[1] "count= 390"
[1] "count= 391"
[1] "count= 392"
[1] "count= 393"
[1] "count= 394"
[1] "count= 395"
[1] "count= 396"
[1] "count= 397"
[1] "count= 398"
[1] "count= 399"
[1] "count= 400"
[1] "count= 401"
[1] "count= 402"
[1] "count= 403"
[1] "count= 404"
[1] "count= 405"
[1] "count= 406"
[1] "count= 407"
[1] "count= 408"
[1] "count= 409"
[1] "count= 410"
[1] "count= 411"
[1] "count= 412"
[1] "count= 413"
[1] "count= 414"
[1] "count= 415"
[1] "count= 416"
[1] "count= 417"
[1] "count= 418"
[1] "count= 419"
[1] "count= 420"
[1] "count= 421"
[1] "count= 422"
[1] "count= 423"
[1] "count= 424"
[1] "count= 425"
[1] "count= 426"
[1] "count= 427"
[1] "count= 428"
[1] "count= 429"
[1] "count= 430"
[1] "count= 431"
[1] "count= 432"
[1] "count= 433"
[1] "count= 434"
[1] "count= 435"
[1] "count= 436"
[1] "count= 437"
[1] "count= 438"
[1] "count= 439"
[1] "count= 440"
[1] "count= 441"
[1] "count= 442"
[1] "count= 443"
[1] "count= 444"
[1] "count= 445"
[1] "count= 446"
[1] "count= 447"
[1] "count= 448"
[1] "count= 449"
[1] "count= 450"
[1] "count= 451"
[1] "count= 452"
[1] "count= 453"
[1] "count= 454"
[1] "count= 455"
[1] "count= 456"
[1] "count= 457"
[1] "count= 458"
[1] "count= 459"
[1] "count= 460"
[1] "count= 461"
[1] "count= 462"
[1] "count= 463"
[1] "count= 464"
[1] "count= 465"
[1] "count= 466"
[1] "count= 467"
[1] "count= 468"
[1] "count= 469"
[1] "count= 470"
[1] "count= 471"
[1] "count= 472"
[1] "count= 473"
[1] "count= 474"
[1] "count= 475"
[1] "count= 476"
[1] "count= 477"
[1] "count= 478"
[1] "count= 479"
[1] "count= 480"
[1] "count= 481"
[1] "count= 482"
[1] "count= 483"
[1] "count= 484"
[1] "count= 485"
[1] "count= 486"
[1] "count= 487"
[1] "count= 488"
[1] "count= 489"
[1] "count= 490"
[1] "count= 491"
[1] "count= 492"
[1] "count= 493"
[1] "count= 494"
[1] "count= 495"
[1] "count= 496"
[1] "count= 497"
[1] "count= 498"
[1] "count= 499"
[1] "count= 500"
[1] "count= 501"
[1] "count= 502"
[1] "count= 503"
[1] "count= 504"
[1] "count= 505"
[1] "count= 506"
[1] "count= 507"
[1] "count= 508"
[1] "count= 509"
[1] "count= 510"
[1] "count= 511"
[1] "count= 512"
[1] "count= 513"
[1] "count= 514"
[1] "count= 515"
[1] "count= 516"
[1] "count= 517"
[1] "count= 518"
[1] "count= 519"
[1] "count= 520"
[1] "count= 521"
[1] "count= 522"
[1] "count= 523"
[1] "count= 524"
[1] "count= 525"
[1] "count= 526"
[1] "count= 527"
[1] "count= 528"
[1] "count= 529"
[1] "count= 530"
[1] "count= 531"
[1] "count= 532"
[1] "count= 533"
[1] "count= 534"
[1] "count= 535"
[1] "count= 536"
[1] "count= 537"
[1] "count= 538"
[1] "count= 539"
[1] "count= 540"
[1] "count= 541"
[1] "count= 542"
[1] "count= 543"
[1] "count= 544"
[1] "count= 545"
[1] "count= 546"
[1] "count= 547"
[1] "count= 548"
[1] "count= 549"
[1] "count= 550"
[1] "count= 551"
[1] "count= 552"
[1] "count= 553"
[1] "count= 554"
[1] "count= 555"
[1] "count= 556"
[1] "count= 557"
[1] "count= 558"
[1] "count= 559"
[1] "count= 560"
[1] "count= 561"
[1] "count= 562"
[1] "count= 563"
[1] "count= 564"
[1] "count= 565"
[1] "count= 566"
[1] "count= 567"
[1] "count= 568"
[1] "count= 569"
[1] "count= 570"
[1] "count= 571"
[1] "count= 572"
[1] "count= 573"
[1] "count= 574"
[1] "count= 575"
[1] "count= 576"
[1] "count= 577"
[1] "count= 578"
[1] "count= 579"
[1] "count= 580"
[1] "count= 581"
[1] "count= 582"
[1] "count= 583"
[1] "count= 584"
[1] "count= 585"
[1] "count= 586"
[1] "count= 587"
[1] "count= 588"
[1] "count= 589"
[1] "count= 590"
[1] "count= 591"
[1] "count= 592"
[1] "count= 593"
[1] "count= 594"
[1] "count= 595"
[1] "count= 596"
[1] "count= 597"
[1] "count= 598"
[1] "count= 599"
[1] "count= 600"
[1] "count= 601"
[1] "count= 602"
[1] "count= 603"
[1] "count= 604"
[1] "count= 605"
[1] "count= 606"
[1] "count= 607"
[1] "count= 608"
[1] "count= 609"
[1] "count= 610"
[1] "count= 611"
[1] "count= 612"
[1] "count= 613"
[1] "count= 614"
[1] "count= 615"
[1] "count= 616"
[1] "count= 617"
[1] "count= 618"
[1] "count= 619"
[1] "count= 620"
[1] "count= 621"
[1] "count= 622"
[1] "count= 623"
[1] "count= 624"
[1] "count= 625"
[1] "count= 626"
[1] "count= 627"
[1] "count= 628"
[1] "count= 629"
[1] "count= 630"
[1] "count= 631"
[1] "count= 632"
[1] "count= 633"
[1] "count= 634"
[1] "count= 635"
[1] "count= 636"
[1] "count= 637"
[1] "count= 638"
[1] "count= 639"
[1] "count= 640"
[1] "count= 641"
[1] "count= 642"
[1] "count= 643"
[1] "count= 644"
[1] "count= 645"
[1] "count= 646"
[1] "count= 647"
[1] "count= 648"
[1] "count= 649"
[1] "count= 650"
[1] "count= 651"
[1] "count= 652"
[1] "count= 653"
[1] "count= 654"
[1] "count= 655"
[1] "count= 656"
[1] "count= 657"
[1] "count= 658"
[1] "count= 659"
[1] "count= 660"
[1] "count= 661"
[1] "count= 662"
[1] "count= 663"
[1] "count= 664"
[1] "count= 665"
[1] "count= 666"
[1] "count= 667"
[1] "count= 668"
[1] "count= 669"
[1] "count= 670"
[1] "count= 671"
[1] "count= 672"
[1] "count= 673"
[1] "count= 674"
[1] "count= 675"
[1] "count= 676"
[1] "count= 677"
[1] "count= 678"
[1] "count= 679"
[1] "count= 680"
[1] "count= 681"
[1] "count= 682"
[1] "count= 683"
[1] "count= 684"
[1] "count= 685"
[1] "count= 686"
[1] "count= 687"
[1] "count= 688"
[1] "count= 689"
[1] "count= 690"
[1] "count= 691"
[1] "count= 692"
[1] "count= 693"
[1] "count= 694"
[1] "count= 695"
[1] "count= 696"
[1] "count= 697"
[1] "count= 698"
[1] "count= 699"
[1] "count= 700"
[1] "count= 701"
[1] "count= 702"
[1] "count= 703"
[1] "count= 704"
[1] "count= 705"
[1] "count= 706"
[1] "count= 707"
[1] "count= 708"
[1] "count= 709"
[1] "count= 710"
[1] "count= 711"
[1] "count= 712"
[1] "count= 713"
[1] "count= 714"
[1] "count= 715"
[1] "count= 716"
[1] "count= 717"
[1] "count= 718"
[1] "count= 719"
[1] "count= 720"
[1] "count= 721"
[1] "count= 722"
[1] "count= 723"
[1] "count= 724"
[1] "count= 725"
[1] "count= 726"
[1] "count= 727"
[1] "count= 728"
[1] "count= 729"
[1] "count= 730"
[1] "count= 731"
[1] "count= 732"
[1] "count= 733"
[1] "count= 734"
[1] "count= 735"
[1] "count= 736"
[1] "count= 737"
[1] "count= 738"
[1] "count= 739"
[1] "count= 740"
[1] "count= 741"
[1] "count= 742"
[1] "count= 743"
[1] "count= 744"
[1] "count= 745"
[1] "count= 746"
[1] "count= 747"
[1] "count= 748"
[1] "count= 749"
[1] "count= 750"
[1] "count= 751"
[1] "count= 752"
[1] "count= 753"
[1] "count= 754"
[1] "count= 755"
[1] "count= 756"
[1] "count= 757"
[1] "count= 758"
[1] "count= 759"
[1] "count= 760"
[1] "count= 761"
[1] "count= 762"
[1] "count= 763"
[1] "count= 764"
[1] "count= 765"
[1] "count= 766"
[1] "count= 767"
[1] "count= 768"
[1] "count= 769"
[1] "count= 770"
[1] "count= 771"
[1] "count= 772"
[1] "count= 773"
[1] "count= 774"
[1] "count= 775"
[1] "count= 776"
[1] "count= 777"
[1] "count= 778"
[1] "count= 779"
[1] "count= 780"
[1] "count= 781"
[1] "count= 782"
[1] "count= 783"
[1] "count= 784"
[1] "count= 785"
[1] "count= 786"
[1] "count= 787"
[1] "count= 788"
[1] "count= 789"
[1] "count= 790"
[1] "count= 791"
[1] "count= 792"
[1] "count= 793"
[1] "count= 794"
[1] "count= 795"
[1] "count= 796"
[1] "count= 797"
[1] "count= 798"
[1] "count= 799"
[1] "count= 800"
[1] "count= 801"
[1] "count= 802"
[1] "count= 803"
[1] "count= 804"
[1] "count= 805"
[1] "count= 806"
[1] "count= 807"
[1] "count= 808"
[1] "count= 809"
[1] "count= 810"
[1] "count= 811"
[1] "count= 812"
[1] "count= 813"
[1] "count= 814"
[1] "count= 815"
[1] "count= 816"
[1] "count= 817"
[1] "count= 818"
[1] "count= 819"
[1] "count= 820"
[1] "count= 821"
[1] "count= 822"
[1] "count= 823"
[1] "count= 824"
[1] "count= 825"
[1] "count= 826"
[1] "count= 827"
[1] "count= 828"
[1] "count= 829"
[1] "count= 830"
[1] "count= 831"
[1] "count= 832"
[1] "count= 833"
[1] "count= 834"
[1] "count= 835"
[1] "count= 836"
[1] "count= 837"
[1] "count= 838"
[1] "count= 839"
[1] "count= 840"
[1] "count= 841"
[1] "count= 842"
[1] "count= 843"
[1] "count= 844"
[1] "count= 845"
[1] "count= 846"
[1] "count= 847"
[1] "count= 848"
[1] "count= 849"
[1] "count= 850"
[1] "count= 851"
[1] "count= 852"
[1] "count= 853"
[1] "count= 854"
[1] "count= 855"
[1] "count= 856"
[1] "count= 857"
[1] "count= 858"
[1] "count= 859"
[1] "count= 860"
[1] "count= 861"
[1] "count= 862"
[1] "count= 863"
[1] "count= 864"
[1] "count= 865"
[1] "count= 866"
[1] "count= 867"
[1] "count= 868"
[1] "count= 869"
[1] "count= 870"
[1] "count= 871"
[1] "count= 872"
[1] "count= 873"
[1] "count= 874"
[1] "count= 875"
[1] "count= 876"
[1] "count= 877"
[1] "count= 878"
[1] "count= 879"
[1] "count= 880"
[1] "count= 881"
[1] "count= 882"
[1] "count= 883"
[1] "count= 884"
[1] "count= 885"
[1] "count= 886"
[1] "count= 887"
[1] "count= 888"
[1] "count= 889"
[1] "count= 890"
[1] "count= 891"
[1] "count= 892"
[1] "count= 893"
[1] "count= 894"
[1] "count= 895"
[1] "count= 896"
[1] "count= 897"
[1] "count= 898"
[1] "count= 899"
[1] "count= 900"
[1] "count= 901"
[1] "count= 902"
[1] "count= 903"
[1] "count= 904"
[1] "count= 905"
[1] "count= 906"
[1] "count= 907"
[1] "count= 908"
[1] "count= 909"
[1] "count= 910"
[1] "count= 911"
[1] "count= 912"
[1] "count= 913"
[1] "count= 914"
[1] "count= 915"
[1] "count= 916"
[1] "count= 917"
[1] "count= 918"
[1] "count= 919"
[1] "count= 920"
[1] "count= 921"
[1] "count= 922"
[1] "count= 923"
[1] "count= 924"
[1] "count= 925"
[1] "count= 926"
[1] "count= 927"
[1] "count= 928"
[1] "count= 929"
[1] "count= 930"
[1] "count= 931"
[1] "count= 932"
[1] "count= 933"
[1] "count= 934"
[1] "count= 935"
[1] "count= 936"
[1] "count= 937"
[1] "count= 938"
[1] "count= 939"
[1] "count= 940"
[1] "count= 941"
[1] "count= 942"
[1] "count= 943"
[1] "count= 944"
[1] "count= 945"
[1] "count= 946"
[1] "count= 947"
[1] "count= 948"
[1] "count= 949"
[1] "count= 950"
[1] "count= 951"
[1] "count= 952"
[1] "count= 953"
[1] "count= 954"
[1] "count= 955"
[1] "count= 956"
[1] "count= 957"
[1] "count= 958"
[1] "count= 959"
[1] "count= 960"
[1] "count= 961"
[1] "count= 962"
[1] "count= 963"
[1] "count= 964"
[1] "count= 965"
[1] "count= 966"
[1] "count= 967"
[1] "count= 968"
[1] "count= 969"
[1] "count= 970"
[1] "count= 971"
[1] "count= 972"
[1] "count= 973"
[1] "count= 974"
[1] "count= 975"
[1] "count= 976"
[1] "count= 977"
[1] "count= 978"
[1] "count= 979"
[1] "count= 980"
[1] "count= 981"
[1] "count= 982"
[1] "count= 983"
[1] "count= 984"
[1] "count= 985"
[1] "count= 986"
[1] "count= 987"
[1] "count= 988"
[1] "count= 989"
[1] "count= 990"
[1] "count= 991"
[1] "count= 992"
[1] "count= 993"
[1] "count= 994"
[1] "count= 995"
[1] "count= 996"
[1] "count= 997"
[1] "count= 998"
[1] "count= 999"
[1] "count= 1000"
>       
>       timestamp = format(Sys.time(), "%Y%b%d_%H%M%S")
>       age.file.name=paste("threshold", degreeThreshold, "p", p, "lambda1", lambda1, 
+                           "lambda2", lambda2,'popsize',popSize, "time",timestamp, "csv", sep="." )
>       full_age_file = paste( outputdir, '/', age.file.name, sep='')
>       
>       write.csv( popAges, full_age_file, row.names=F)
>       
> 

R version 3.2.1 (2015-06-18) -- "World-Famous Astronaut"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> ##########################################
> #2015Dec a generic network simulation code with files names as input
> #2015Oct13, use numeric lookup table for essential genes.
> #2014March3, redo ginppi simulation witht same parameter for ms02networks. 
> # 2014 Feb 17, change name "20131221.DIPandGIN.sim.aging_v2.R" to "net-aging-sim-2014Feb17.R"
> # 2013 Dec 20, merge DIP PPI and Genetic Inxt Net -> Multi-net approach
> #rm(list=ls())
> 
> single_network_failure_v2 = function(lambda1, lambda2=lambda1/10, threshold=4, p, pairs, essenLookupTb ) {
+   # single network failure simulation, 20151013Tue
+   # lambda1: First exponential constant failure rate for edges with degree > threshold
+   # lambda2: Second exponential constant failure rate for edges with degree <= threshold
+   # threshold: degree threshold for lambda1 and lambda2
+   # pairs: network in pairwide format, using numeric NOs 20151013
+   # essenLookupTb: lookup table for essential and nonessential genes, numeric values 
+   ## for debug:   lambda1 = 1/50; lambda2= lambda1/10; threshold=4; p=0.8
+   
+   inpairs = pairs[,3:4] #bookkeeping  
+   names(inpairs) = c('No1','No2')
+   
+   #get connectivities per node
+   degreeTb = data.frame( table(c(inpairs$No1, inpairs$No2)))
+   names(degreeTb) = c("No", "degree")
+   degreeTb$moduleAge = NA;
+   
+   for( i in 1:length(degreeTb[,1])){
+     if ( essenLookupTb[ degreeTb$No[i] ]) { #essential node
+       lambda = ifelse( degreeTb$degree[i] >= threshold, lambda1, lambda2)
+       age = rexp( degreeTb$degree[i], rate=lambda ) #exponential age
+       if(degreeTb$degree[i] >= threshold){
+         active = runif(degreeTb$degree[i])  #uniform interaction stochasticity
+         active = ifelse( active<=p, 1, NA  ) #pick active interactions
+         if( sum(active, na.rm=T) > 0 ){ #there should be at least 1 active intxn
+           age = age * active # only active interactions for modular age estimation
+           degreeTb$moduleAge[i] = max(age, na.rm=T) #maximum intxn age is the module age
+         } else {# when no active intxn is available 
+           degreeTb$moduleAge[i] = 0; #this module is born dead.
+         }
+       } else { # for degree < threshold, no stochasticity is applied. 
+         degreeTb$moduleAge[i] = max(age, na.rm=T) #maximum intxn age is the module age
+       }
+     } else {# non-essential node
+       degreeTb$moduleAge[i] = NA 
+     }
+   }
+   
+   summary(degreeTb)
+   currentNetworkAge = min(degreeTb$moduleAge, na.rm=T)
+ }
> #                    1                     2           3      4           5          6   7     8
> # R -f file --args pairwise-networkFile LookUpTbFile lambda1 lambda2 degreeThreshold p popSize outputdir
> # R -f 20151215-netsim-generic.R --args net1/Degree4N1000_network.csv  net1/net1/Degree4N1000_EssenLookupTb.csv 0.002 0.0002 5 1.0 1000 net1
> # R -f 20151215-netsim-generic.R --args data/merged_PPIGIN_Factorized2015Oct13.csv data/essntialGeneLookupTable_20151013.csv   0.002 0.0002 4 0.9 5
> 
> options(echo=TRUE) # if you want see commands in output file
> args <- commandArgs(trailingOnly = TRUE)
> print(args)
[1] "net1/Degree4N1000_network.csv"           
[2] "net1/net1/Degree4N1000_EssenLookupTb.csv"
[3] "0.002"                                   
[4] "0.0002"                                  
[5] "5"                                       
[6] "0.85"                                    
[7] "1000"                                    
[8] "net1"                                    
> inNetworkFile = args[1];
> inLookupTbFile = args[2];
> lambda1 = as.numeric(args[3]); lambda1;
[1] 0.002
> lambda2 = as.numeric(args[4]); lambda2;
[1] 2e-04
> degreeThreshold = as.integer((args[5])); degreeThreshold
[1] 5
> p = as.numeric(args[6]); p;
[1] 0.85
> popSize = as.numeric(args[7]); popSize;
[1] 1000
> outputdir = args[8];
> 
> list.files(path='net1', )
[1] "Degree4N1000_EssenLookupTb.csv"                                                       
[2] "Degree4N1000_network.csv"                                                             
[3] "threshold.5.p.0.9.lambda1.0.002.lambda2.2e-04.popsize.1000.time.2015Dec16_094953.csv" 
[4] "threshold.5.p.0.95.lambda1.0.002.lambda2.2e-04.popsize.1000.time.2015Dec16_094923.csv"
> debug = 9; 
> 
> #essential gene info
> #essenTb = read.csv("data/SummaryRegressionHetHomFactorized2015Oct13.csv", colClasses=rep('character', 9))
> #essenLookupTb = read.csv("net1/Degree4N1000_EssenLookupTb.csv", row.names = 1)
> essenLookupTb = read.csv(inNetworkFile);
> essenLookupTb = essenLookupTb[,1];
> 
> # inNetworFile = "net1/Degree4N1000_network.csv"
> pairs = read.csv(inNetworkFile); 
> names(pairs) = c("No1", "No2")
>   print(head(pairs))
  No1  No2
1   1 1001
2   1 1002
3   1 1003
4   1 1004
5   2 1005
6   2 1006
>   if(debug==9) {     pairs = pairs[1:1000,]  }
>   pairs = pairs[ pairs$No1 != pairs$No2, ]  
> 
>   # label essential nodes, remove nonesse-nonessen pairs
>   pairs$essen1 = essenLookupTb[pairs$No1]
>   pairs$essen2 = essenLookupTb[pairs$No2]
>   #remove nonessen <-> nonessen intxn because they do not affect aging. 
>   pairs$remove = ifelse( pairs$essen1==F & pairs$essen2==F, T, F  )
>   pairs= pairs[! pairs$remove, ]  
>   # 31394 for one ms02 network
>   
>   #get connectivities per node
>   degreeTb = data.frame( table(c(pairs$No1, pairs$No2)))
>   summary(degreeTb); 
      Var1           Freq    
 1      :   1   Min.   :1.0  
 2      :   1   1st Qu.:1.0  
 3      :   1   Median :1.0  
 4      :   1   Mean   :1.6  
 5      :   1   3rd Qu.:1.0  
 6      :   1   Max.   :4.0  
 (Other):1244                
>   degreeTb[1:10,]
   Var1 Freq
1     1    4
2     2    4
3     3    4
4     4    4
5     5    4
6     6    4
7     7    4
8     8    4
9     9    4
10   10    4
>   
>       popAges = numeric(popSize)
>       time1 = date()
>       j=1; count = 0; 
>       while ((j <= popSize) && ( count < popSize*30)) {
+         count = count + 1;      
+         print(paste("count=",count))
+         currentNetworkAge = single_network_failure_v2(lambda1, lambda2, degreeThreshold, p, pairs, essenLookupTb)
+         if (currentNetworkAge > 0) {
+           popAges[j] = currentNetworkAge      
+           j = j+1
+         } 
+       }# end of j while-loop, population loop
[1] "count= 1"
[1] "count= 2"
[1] "count= 3"
[1] "count= 4"
[1] "count= 5"
[1] "count= 6"
[1] "count= 7"
[1] "count= 8"
[1] "count= 9"
[1] "count= 10"
[1] "count= 11"
[1] "count= 12"
[1] "count= 13"
[1] "count= 14"
[1] "count= 15"
[1] "count= 16"
[1] "count= 17"
[1] "count= 18"
[1] "count= 19"
[1] "count= 20"
[1] "count= 21"
[1] "count= 22"
[1] "count= 23"
[1] "count= 24"
[1] "count= 25"
[1] "count= 26"
[1] "count= 27"
[1] "count= 28"
[1] "count= 29"
[1] "count= 30"
[1] "count= 31"
[1] "count= 32"
[1] "count= 33"
[1] "count= 34"
[1] "count= 35"
[1] "count= 36"
[1] "count= 37"
[1] "count= 38"
[1] "count= 39"
[1] "count= 40"
[1] "count= 41"
[1] "count= 42"
[1] "count= 43"
[1] "count= 44"
[1] "count= 45"
[1] "count= 46"
[1] "count= 47"
[1] "count= 48"
[1] "count= 49"
[1] "count= 50"
[1] "count= 51"
[1] "count= 52"
[1] "count= 53"
[1] "count= 54"
[1] "count= 55"
[1] "count= 56"
[1] "count= 57"
[1] "count= 58"
[1] "count= 59"
[1] "count= 60"
[1] "count= 61"
[1] "count= 62"
[1] "count= 63"
[1] "count= 64"
[1] "count= 65"
[1] "count= 66"
[1] "count= 67"
[1] "count= 68"
[1] "count= 69"
[1] "count= 70"
[1] "count= 71"
[1] "count= 72"
[1] "count= 73"
[1] "count= 74"
[1] "count= 75"
[1] "count= 76"
[1] "count= 77"
[1] "count= 78"
[1] "count= 79"
[1] "count= 80"
[1] "count= 81"
[1] "count= 82"
[1] "count= 83"
[1] "count= 84"
[1] "count= 85"
[1] "count= 86"
[1] "count= 87"
[1] "count= 88"
[1] "count= 89"
[1] "count= 90"
[1] "count= 91"
[1] "count= 92"
[1] "count= 93"
[1] "count= 94"
[1] "count= 95"
[1] "count= 96"
[1] "count= 97"
[1] "count= 98"
[1] "count= 99"
[1] "count= 100"
[1] "count= 101"
[1] "count= 102"
[1] "count= 103"
[1] "count= 104"
[1] "count= 105"
[1] "count= 106"
[1] "count= 107"
[1] "count= 108"
[1] "count= 109"
[1] "count= 110"
[1] "count= 111"
[1] "count= 112"
[1] "count= 113"
[1] "count= 114"
[1] "count= 115"
[1] "count= 116"
[1] "count= 117"
[1] "count= 118"
[1] "count= 119"
[1] "count= 120"
[1] "count= 121"
[1] "count= 122"
[1] "count= 123"
[1] "count= 124"
[1] "count= 125"
[1] "count= 126"
[1] "count= 127"
[1] "count= 128"
[1] "count= 129"
[1] "count= 130"
[1] "count= 131"
[1] "count= 132"
[1] "count= 133"
[1] "count= 134"
[1] "count= 135"
[1] "count= 136"
[1] "count= 137"
[1] "count= 138"
[1] "count= 139"
[1] "count= 140"
[1] "count= 141"
[1] "count= 142"
[1] "count= 143"
[1] "count= 144"
[1] "count= 145"
[1] "count= 146"
[1] "count= 147"
[1] "count= 148"
[1] "count= 149"
[1] "count= 150"
[1] "count= 151"
[1] "count= 152"
[1] "count= 153"
[1] "count= 154"
[1] "count= 155"
[1] "count= 156"
[1] "count= 157"
[1] "count= 158"
[1] "count= 159"
[1] "count= 160"
[1] "count= 161"
[1] "count= 162"
[1] "count= 163"
[1] "count= 164"
[1] "count= 165"
[1] "count= 166"
[1] "count= 167"
[1] "count= 168"
[1] "count= 169"
[1] "count= 170"
[1] "count= 171"
[1] "count= 172"
[1] "count= 173"
[1] "count= 174"
[1] "count= 175"
[1] "count= 176"
[1] "count= 177"
[1] "count= 178"
[1] "count= 179"
[1] "count= 180"
[1] "count= 181"
[1] "count= 182"
[1] "count= 183"
[1] "count= 184"
[1] "count= 185"
[1] "count= 186"
[1] "count= 187"
[1] "count= 188"
[1] "count= 189"
[1] "count= 190"
[1] "count= 191"
[1] "count= 192"
[1] "count= 193"
[1] "count= 194"
[1] "count= 195"
[1] "count= 196"
[1] "count= 197"
[1] "count= 198"
[1] "count= 199"
[1] "count= 200"
[1] "count= 201"
[1] "count= 202"
[1] "count= 203"
[1] "count= 204"
[1] "count= 205"
[1] "count= 206"
[1] "count= 207"
[1] "count= 208"
[1] "count= 209"
[1] "count= 210"
[1] "count= 211"
[1] "count= 212"
[1] "count= 213"
[1] "count= 214"
[1] "count= 215"
[1] "count= 216"
[1] "count= 217"
[1] "count= 218"
[1] "count= 219"
[1] "count= 220"
[1] "count= 221"
[1] "count= 222"
[1] "count= 223"
[1] "count= 224"
[1] "count= 225"
[1] "count= 226"
[1] "count= 227"
[1] "count= 228"
[1] "count= 229"
[1] "count= 230"
[1] "count= 231"
[1] "count= 232"
[1] "count= 233"
[1] "count= 234"
[1] "count= 235"
[1] "count= 236"
[1] "count= 237"
[1] "count= 238"
[1] "count= 239"
[1] "count= 240"
[1] "count= 241"
[1] "count= 242"
[1] "count= 243"
[1] "count= 244"
[1] "count= 245"
[1] "count= 246"
[1] "count= 247"
[1] "count= 248"
[1] "count= 249"
[1] "count= 250"
[1] "count= 251"
[1] "count= 252"
[1] "count= 253"
[1] "count= 254"
[1] "count= 255"
[1] "count= 256"
[1] "count= 257"
[1] "count= 258"
[1] "count= 259"
[1] "count= 260"
[1] "count= 261"
[1] "count= 262"
[1] "count= 263"
[1] "count= 264"
[1] "count= 265"
[1] "count= 266"
[1] "count= 267"
[1] "count= 268"
[1] "count= 269"
[1] "count= 270"
[1] "count= 271"
[1] "count= 272"
[1] "count= 273"
[1] "count= 274"
[1] "count= 275"
[1] "count= 276"
[1] "count= 277"
[1] "count= 278"
[1] "count= 279"
[1] "count= 280"
[1] "count= 281"
[1] "count= 282"
[1] "count= 283"
[1] "count= 284"
[1] "count= 285"
[1] "count= 286"
[1] "count= 287"
[1] "count= 288"
[1] "count= 289"
[1] "count= 290"
[1] "count= 291"
[1] "count= 292"
[1] "count= 293"
[1] "count= 294"
[1] "count= 295"
[1] "count= 296"
[1] "count= 297"
[1] "count= 298"
[1] "count= 299"
[1] "count= 300"
[1] "count= 301"
[1] "count= 302"
[1] "count= 303"
[1] "count= 304"
[1] "count= 305"
[1] "count= 306"
[1] "count= 307"
[1] "count= 308"
[1] "count= 309"
[1] "count= 310"
[1] "count= 311"
[1] "count= 312"
[1] "count= 313"
[1] "count= 314"
[1] "count= 315"
[1] "count= 316"
[1] "count= 317"
[1] "count= 318"
[1] "count= 319"
[1] "count= 320"
[1] "count= 321"
[1] "count= 322"
[1] "count= 323"
[1] "count= 324"
[1] "count= 325"
[1] "count= 326"
[1] "count= 327"
[1] "count= 328"
[1] "count= 329"
[1] "count= 330"
[1] "count= 331"
[1] "count= 332"
[1] "count= 333"
[1] "count= 334"
[1] "count= 335"
[1] "count= 336"
[1] "count= 337"
[1] "count= 338"
[1] "count= 339"
[1] "count= 340"
[1] "count= 341"
[1] "count= 342"
[1] "count= 343"
[1] "count= 344"
[1] "count= 345"
[1] "count= 346"
[1] "count= 347"
[1] "count= 348"
[1] "count= 349"
[1] "count= 350"
[1] "count= 351"
[1] "count= 352"
[1] "count= 353"
[1] "count= 354"
[1] "count= 355"
[1] "count= 356"
[1] "count= 357"
[1] "count= 358"
[1] "count= 359"
[1] "count= 360"
[1] "count= 361"
[1] "count= 362"
[1] "count= 363"
[1] "count= 364"
[1] "count= 365"
[1] "count= 366"
[1] "count= 367"
[1] "count= 368"
[1] "count= 369"
[1] "count= 370"
[1] "count= 371"
[1] "count= 372"
[1] "count= 373"
[1] "count= 374"
[1] "count= 375"
[1] "count= 376"
[1] "count= 377"
[1] "count= 378"
[1] "count= 379"
[1] "count= 380"
[1] "count= 381"
[1] "count= 382"
[1] "count= 383"
[1] "count= 384"
[1] "count= 385"
[1] "count= 386"
[1] "count= 387"
[1] "count= 388"
[1] "count= 389"
[1] "count= 390"
[1] "count= 391"
[1] "count= 392"
[1] "count= 393"
[1] "count= 394"
[1] "count= 395"
[1] "count= 396"
[1] "count= 397"
[1] "count= 398"
[1] "count= 399"
[1] "count= 400"
[1] "count= 401"
[1] "count= 402"
[1] "count= 403"
[1] "count= 404"
[1] "count= 405"
[1] "count= 406"
[1] "count= 407"
[1] "count= 408"
[1] "count= 409"
[1] "count= 410"
[1] "count= 411"
[1] "count= 412"
[1] "count= 413"
[1] "count= 414"
[1] "count= 415"
[1] "count= 416"
[1] "count= 417"
[1] "count= 418"
[1] "count= 419"
[1] "count= 420"
[1] "count= 421"
[1] "count= 422"
[1] "count= 423"
[1] "count= 424"
[1] "count= 425"
[1] "count= 426"
[1] "count= 427"
[1] "count= 428"
[1] "count= 429"
[1] "count= 430"
[1] "count= 431"
[1] "count= 432"
[1] "count= 433"
[1] "count= 434"
[1] "count= 435"
[1] "count= 436"
[1] "count= 437"
[1] "count= 438"
[1] "count= 439"
[1] "count= 440"
[1] "count= 441"
[1] "count= 442"
[1] "count= 443"
[1] "count= 444"
[1] "count= 445"
[1] "count= 446"
[1] "count= 447"
[1] "count= 448"
[1] "count= 449"
[1] "count= 450"
[1] "count= 451"
[1] "count= 452"
[1] "count= 453"
[1] "count= 454"
[1] "count= 455"
[1] "count= 456"
[1] "count= 457"
[1] "count= 458"
[1] "count= 459"
[1] "count= 460"
[1] "count= 461"
[1] "count= 462"
[1] "count= 463"
[1] "count= 464"
[1] "count= 465"
[1] "count= 466"
[1] "count= 467"
[1] "count= 468"
[1] "count= 469"
[1] "count= 470"
[1] "count= 471"
[1] "count= 472"
[1] "count= 473"
[1] "count= 474"
[1] "count= 475"
[1] "count= 476"
[1] "count= 477"
[1] "count= 478"
[1] "count= 479"
[1] "count= 480"
[1] "count= 481"
[1] "count= 482"
[1] "count= 483"
[1] "count= 484"
[1] "count= 485"
[1] "count= 486"
[1] "count= 487"
[1] "count= 488"
[1] "count= 489"
[1] "count= 490"
[1] "count= 491"
[1] "count= 492"
[1] "count= 493"
[1] "count= 494"
[1] "count= 495"
[1] "count= 496"
[1] "count= 497"
[1] "count= 498"
[1] "count= 499"
[1] "count= 500"
[1] "count= 501"
[1] "count= 502"
[1] "count= 503"
[1] "count= 504"
[1] "count= 505"
[1] "count= 506"
[1] "count= 507"
[1] "count= 508"
[1] "count= 509"
[1] "count= 510"
[1] "count= 511"
[1] "count= 512"
[1] "count= 513"
[1] "count= 514"
[1] "count= 515"
[1] "count= 516"
[1] "count= 517"
[1] "count= 518"
[1] "count= 519"
[1] "count= 520"
[1] "count= 521"
[1] "count= 522"
[1] "count= 523"
[1] "count= 524"
[1] "count= 525"
[1] "count= 526"
[1] "count= 527"
[1] "count= 528"
[1] "count= 529"
[1] "count= 530"
[1] "count= 531"
[1] "count= 532"
[1] "count= 533"
[1] "count= 534"
[1] "count= 535"
[1] "count= 536"
[1] "count= 537"
[1] "count= 538"
[1] "count= 539"
[1] "count= 540"
[1] "count= 541"
[1] "count= 542"
[1] "count= 543"
[1] "count= 544"
[1] "count= 545"
[1] "count= 546"
[1] "count= 547"
[1] "count= 548"
[1] "count= 549"
[1] "count= 550"
[1] "count= 551"
[1] "count= 552"
[1] "count= 553"
[1] "count= 554"
[1] "count= 555"
[1] "count= 556"
[1] "count= 557"
[1] "count= 558"
[1] "count= 559"
[1] "count= 560"
[1] "count= 561"
[1] "count= 562"
[1] "count= 563"
[1] "count= 564"
[1] "count= 565"
[1] "count= 566"
[1] "count= 567"
[1] "count= 568"
[1] "count= 569"
[1] "count= 570"
[1] "count= 571"
[1] "count= 572"
[1] "count= 573"
[1] "count= 574"
[1] "count= 575"
[1] "count= 576"
[1] "count= 577"
[1] "count= 578"
[1] "count= 579"
[1] "count= 580"
[1] "count= 581"
[1] "count= 582"
[1] "count= 583"
[1] "count= 584"
[1] "count= 585"
[1] "count= 586"
[1] "count= 587"
[1] "count= 588"
[1] "count= 589"
[1] "count= 590"
[1] "count= 591"
[1] "count= 592"
[1] "count= 593"
[1] "count= 594"
[1] "count= 595"
[1] "count= 596"
[1] "count= 597"
[1] "count= 598"
[1] "count= 599"
[1] "count= 600"
[1] "count= 601"
[1] "count= 602"
[1] "count= 603"
[1] "count= 604"
[1] "count= 605"
[1] "count= 606"
[1] "count= 607"
[1] "count= 608"
[1] "count= 609"
[1] "count= 610"
[1] "count= 611"
[1] "count= 612"
[1] "count= 613"
[1] "count= 614"
[1] "count= 615"
[1] "count= 616"
[1] "count= 617"
[1] "count= 618"
[1] "count= 619"
[1] "count= 620"
[1] "count= 621"
[1] "count= 622"
[1] "count= 623"
[1] "count= 624"
[1] "count= 625"
[1] "count= 626"
[1] "count= 627"
[1] "count= 628"
[1] "count= 629"
[1] "count= 630"
[1] "count= 631"
[1] "count= 632"
[1] "count= 633"
[1] "count= 634"
[1] "count= 635"
[1] "count= 636"
[1] "count= 637"
[1] "count= 638"
[1] "count= 639"
[1] "count= 640"
[1] "count= 641"
[1] "count= 642"
[1] "count= 643"
[1] "count= 644"
[1] "count= 645"
[1] "count= 646"
[1] "count= 647"
[1] "count= 648"
[1] "count= 649"
[1] "count= 650"
[1] "count= 651"
[1] "count= 652"
[1] "count= 653"
[1] "count= 654"
[1] "count= 655"
[1] "count= 656"
[1] "count= 657"
[1] "count= 658"
[1] "count= 659"
[1] "count= 660"
[1] "count= 661"
[1] "count= 662"
[1] "count= 663"
[1] "count= 664"
[1] "count= 665"
[1] "count= 666"
[1] "count= 667"
[1] "count= 668"
[1] "count= 669"
[1] "count= 670"
[1] "count= 671"
[1] "count= 672"
[1] "count= 673"
[1] "count= 674"
[1] "count= 675"
[1] "count= 676"
[1] "count= 677"
[1] "count= 678"
[1] "count= 679"
[1] "count= 680"
[1] "count= 681"
[1] "count= 682"
[1] "count= 683"
[1] "count= 684"
[1] "count= 685"
[1] "count= 686"
[1] "count= 687"
[1] "count= 688"
[1] "count= 689"
[1] "count= 690"
[1] "count= 691"
[1] "count= 692"
[1] "count= 693"
[1] "count= 694"
[1] "count= 695"
[1] "count= 696"
[1] "count= 697"
[1] "count= 698"
[1] "count= 699"
[1] "count= 700"
[1] "count= 701"
[1] "count= 702"
[1] "count= 703"
[1] "count= 704"
[1] "count= 705"
[1] "count= 706"
[1] "count= 707"
[1] "count= 708"
[1] "count= 709"
[1] "count= 710"
[1] "count= 711"
[1] "count= 712"
[1] "count= 713"
[1] "count= 714"
[1] "count= 715"
[1] "count= 716"
[1] "count= 717"
[1] "count= 718"
[1] "count= 719"
[1] "count= 720"
[1] "count= 721"
[1] "count= 722"
[1] "count= 723"
[1] "count= 724"
[1] "count= 725"
[1] "count= 726"
[1] "count= 727"
[1] "count= 728"
[1] "count= 729"
[1] "count= 730"
[1] "count= 731"
[1] "count= 732"
[1] "count= 733"
[1] "count= 734"
[1] "count= 735"
[1] "count= 736"
[1] "count= 737"
[1] "count= 738"
[1] "count= 739"
[1] "count= 740"
[1] "count= 741"
[1] "count= 742"
[1] "count= 743"
[1] "count= 744"
[1] "count= 745"
[1] "count= 746"
[1] "count= 747"
[1] "count= 748"
[1] "count= 749"
[1] "count= 750"
[1] "count= 751"
[1] "count= 752"
[1] "count= 753"
[1] "count= 754"
[1] "count= 755"
[1] "count= 756"
[1] "count= 757"
[1] "count= 758"
[1] "count= 759"
[1] "count= 760"
[1] "count= 761"
[1] "count= 762"
[1] "count= 763"
[1] "count= 764"
[1] "count= 765"
[1] "count= 766"
[1] "count= 767"
[1] "count= 768"
[1] "count= 769"
[1] "count= 770"
[1] "count= 771"
[1] "count= 772"
[1] "count= 773"
[1] "count= 774"
[1] "count= 775"
[1] "count= 776"
[1] "count= 777"
[1] "count= 778"
[1] "count= 779"
[1] "count= 780"
[1] "count= 781"
[1] "count= 782"
[1] "count= 783"
[1] "count= 784"
[1] "count= 785"
[1] "count= 786"
[1] "count= 787"
[1] "count= 788"
[1] "count= 789"
[1] "count= 790"
[1] "count= 791"
[1] "count= 792"
[1] "count= 793"
[1] "count= 794"
[1] "count= 795"
[1] "count= 796"
[1] "count= 797"
[1] "count= 798"
[1] "count= 799"
[1] "count= 800"
[1] "count= 801"
[1] "count= 802"
[1] "count= 803"
[1] "count= 804"
[1] "count= 805"
[1] "count= 806"
[1] "count= 807"
[1] "count= 808"
[1] "count= 809"
[1] "count= 810"
[1] "count= 811"
[1] "count= 812"
[1] "count= 813"
[1] "count= 814"
[1] "count= 815"
[1] "count= 816"
[1] "count= 817"
[1] "count= 818"
[1] "count= 819"
[1] "count= 820"
[1] "count= 821"
[1] "count= 822"
[1] "count= 823"
[1] "count= 824"
[1] "count= 825"
[1] "count= 826"
[1] "count= 827"
[1] "count= 828"
[1] "count= 829"
[1] "count= 830"
[1] "count= 831"
[1] "count= 832"
[1] "count= 833"
[1] "count= 834"
[1] "count= 835"
[1] "count= 836"
[1] "count= 837"
[1] "count= 838"
[1] "count= 839"
[1] "count= 840"
[1] "count= 841"
[1] "count= 842"
[1] "count= 843"
[1] "count= 844"
[1] "count= 845"
[1] "count= 846"
[1] "count= 847"
[1] "count= 848"
[1] "count= 849"
[1] "count= 850"
[1] "count= 851"
[1] "count= 852"
[1] "count= 853"
[1] "count= 854"
[1] "count= 855"
[1] "count= 856"
[1] "count= 857"
[1] "count= 858"
[1] "count= 859"
[1] "count= 860"
[1] "count= 861"
[1] "count= 862"
[1] "count= 863"
[1] "count= 864"
[1] "count= 865"
[1] "count= 866"
[1] "count= 867"
[1] "count= 868"
[1] "count= 869"
[1] "count= 870"
[1] "count= 871"
[1] "count= 872"
[1] "count= 873"
[1] "count= 874"
[1] "count= 875"
[1] "count= 876"
[1] "count= 877"
[1] "count= 878"
[1] "count= 879"
[1] "count= 880"
[1] "count= 881"
[1] "count= 882"
[1] "count= 883"
[1] "count= 884"
[1] "count= 885"
[1] "count= 886"
[1] "count= 887"
[1] "count= 888"
[1] "count= 889"
[1] "count= 890"
[1] "count= 891"
[1] "count= 892"
[1] "count= 893"
[1] "count= 894"
[1] "count= 895"
[1] "count= 896"
[1] "count= 897"
[1] "count= 898"
[1] "count= 899"
[1] "count= 900"
[1] "count= 901"
[1] "count= 902"
[1] "count= 903"
[1] "count= 904"
[1] "count= 905"
[1] "count= 906"
[1] "count= 907"
[1] "count= 908"
[1] "count= 909"
[1] "count= 910"
[1] "count= 911"
[1] "count= 912"
[1] "count= 913"
[1] "count= 914"
[1] "count= 915"
[1] "count= 916"
[1] "count= 917"
[1] "count= 918"
[1] "count= 919"
[1] "count= 920"
[1] "count= 921"
[1] "count= 922"
[1] "count= 923"
[1] "count= 924"
[1] "count= 925"
[1] "count= 926"
[1] "count= 927"
[1] "count= 928"
[1] "count= 929"
[1] "count= 930"
[1] "count= 931"
[1] "count= 932"
[1] "count= 933"
[1] "count= 934"
[1] "count= 935"
[1] "count= 936"
[1] "count= 937"
[1] "count= 938"
[1] "count= 939"
[1] "count= 940"
[1] "count= 941"
[1] "count= 942"
[1] "count= 943"
[1] "count= 944"
[1] "count= 945"
[1] "count= 946"
[1] "count= 947"
[1] "count= 948"
[1] "count= 949"
[1] "count= 950"
[1] "count= 951"
[1] "count= 952"
[1] "count= 953"
[1] "count= 954"
[1] "count= 955"
[1] "count= 956"
[1] "count= 957"
[1] "count= 958"
[1] "count= 959"
[1] "count= 960"
[1] "count= 961"
[1] "count= 962"
[1] "count= 963"
[1] "count= 964"
[1] "count= 965"
[1] "count= 966"
[1] "count= 967"
[1] "count= 968"
[1] "count= 969"
[1] "count= 970"
[1] "count= 971"
[1] "count= 972"
[1] "count= 973"
[1] "count= 974"
[1] "count= 975"
[1] "count= 976"
[1] "count= 977"
[1] "count= 978"
[1] "count= 979"
[1] "count= 980"
[1] "count= 981"
[1] "count= 982"
[1] "count= 983"
[1] "count= 984"
[1] "count= 985"
[1] "count= 986"
[1] "count= 987"
[1] "count= 988"
[1] "count= 989"
[1] "count= 990"
[1] "count= 991"
[1] "count= 992"
[1] "count= 993"
[1] "count= 994"
[1] "count= 995"
[1] "count= 996"
[1] "count= 997"
[1] "count= 998"
[1] "count= 999"
[1] "count= 1000"
>       
>       timestamp = format(Sys.time(), "%Y%b%d_%H%M%S")
>       age.file.name=paste("threshold", degreeThreshold, "p", p, "lambda1", lambda1, 
+                           "lambda2", lambda2,'popsize',popSize, "time",timestamp, "csv", sep="." )
>       full_age_file = paste( outputdir, '/', age.file.name, sep='')
>       
>       write.csv( popAges, full_age_file, row.names=F)
>       
> 

R version 3.2.1 (2015-06-18) -- "World-Famous Astronaut"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> ##########################################
> #2015Dec a generic network simulation code with files names as input
> #2015Oct13, use numeric lookup table for essential genes.
> #2014March3, redo ginppi simulation witht same parameter for ms02networks. 
> # 2014 Feb 17, change name "20131221.DIPandGIN.sim.aging_v2.R" to "net-aging-sim-2014Feb17.R"
> # 2013 Dec 20, merge DIP PPI and Genetic Inxt Net -> Multi-net approach
> #rm(list=ls())
> 
> single_network_failure_v2 = function(lambda1, lambda2=lambda1/10, threshold=4, p, pairs, essenLookupTb ) {
+   # single network failure simulation, 20151013Tue
+   # lambda1: First exponential constant failure rate for edges with degree > threshold
+   # lambda2: Second exponential constant failure rate for edges with degree <= threshold
+   # threshold: degree threshold for lambda1 and lambda2
+   # pairs: network in pairwide format, using numeric NOs 20151013
+   # essenLookupTb: lookup table for essential and nonessential genes, numeric values 
+   ## for debug:   lambda1 = 1/50; lambda2= lambda1/10; threshold=4; p=0.8
+   
+   inpairs = pairs[,3:4] #bookkeeping  
+   names(inpairs) = c('No1','No2')
+   
+   #get connectivities per node
+   degreeTb = data.frame( table(c(inpairs$No1, inpairs$No2)))
+   names(degreeTb) = c("No", "degree")
+   degreeTb$moduleAge = NA;
+   
+   for( i in 1:length(degreeTb[,1])){
+     if ( essenLookupTb[ degreeTb$No[i] ]) { #essential node
+       lambda = ifelse( degreeTb$degree[i] >= threshold, lambda1, lambda2)
+       age = rexp( degreeTb$degree[i], rate=lambda ) #exponential age
+       if(degreeTb$degree[i] >= threshold){
+         active = runif(degreeTb$degree[i])  #uniform interaction stochasticity
+         active = ifelse( active<=p, 1, NA  ) #pick active interactions
+         if( sum(active, na.rm=T) > 0 ){ #there should be at least 1 active intxn
+           age = age * active # only active interactions for modular age estimation
+           degreeTb$moduleAge[i] = max(age, na.rm=T) #maximum intxn age is the module age
+         } else {# when no active intxn is available 
+           degreeTb$moduleAge[i] = 0; #this module is born dead.
+         }
+       } else { # for degree < threshold, no stochasticity is applied. 
+         degreeTb$moduleAge[i] = max(age, na.rm=T) #maximum intxn age is the module age
+       }
+     } else {# non-essential node
+       degreeTb$moduleAge[i] = NA 
+     }
+   }
+   
+   summary(degreeTb)
+   currentNetworkAge = min(degreeTb$moduleAge, na.rm=T)
+ }
> #                    1                     2           3      4           5          6   7     8
> # R -f file --args pairwise-networkFile LookUpTbFile lambda1 lambda2 degreeThreshold p popSize outputdir
> # R -f 20151215-netsim-generic.R --args net1/Degree4N1000_network.csv  net1/net1/Degree4N1000_EssenLookupTb.csv 0.002 0.0002 5 1.0 1000 net1
> # R -f 20151215-netsim-generic.R --args data/merged_PPIGIN_Factorized2015Oct13.csv data/essntialGeneLookupTable_20151013.csv   0.002 0.0002 4 0.9 5
> 
> options(echo=TRUE) # if you want see commands in output file
> args <- commandArgs(trailingOnly = TRUE)
> print(args)
[1] "net1/Degree4N1000_network.csv"           
[2] "net1/net1/Degree4N1000_EssenLookupTb.csv"
[3] "0.002"                                   
[4] "0.0002"                                  
[5] "5"                                       
[6] "0.8"                                     
[7] "1000"                                    
[8] "net1"                                    
> inNetworkFile = args[1];
> inLookupTbFile = args[2];
> lambda1 = as.numeric(args[3]); lambda1;
[1] 0.002
> lambda2 = as.numeric(args[4]); lambda2;
[1] 2e-04
> degreeThreshold = as.integer((args[5])); degreeThreshold
[1] 5
> p = as.numeric(args[6]); p;
[1] 0.8
> popSize = as.numeric(args[7]); popSize;
[1] 1000
> outputdir = args[8];
> 
> list.files(path='net1', )
[1] "Degree4N1000_EssenLookupTb.csv"                                                       
[2] "Degree4N1000_network.csv"                                                             
[3] "threshold.5.p.0.85.lambda1.0.002.lambda2.2e-04.popsize.1000.time.2015Dec16_095024.csv"
[4] "threshold.5.p.0.9.lambda1.0.002.lambda2.2e-04.popsize.1000.time.2015Dec16_094953.csv" 
[5] "threshold.5.p.0.95.lambda1.0.002.lambda2.2e-04.popsize.1000.time.2015Dec16_094923.csv"
> debug = 9; 
> 
> #essential gene info
> #essenTb = read.csv("data/SummaryRegressionHetHomFactorized2015Oct13.csv", colClasses=rep('character', 9))
> #essenLookupTb = read.csv("net1/Degree4N1000_EssenLookupTb.csv", row.names = 1)
> essenLookupTb = read.csv(inNetworkFile);
> essenLookupTb = essenLookupTb[,1];
> 
> # inNetworFile = "net1/Degree4N1000_network.csv"
> pairs = read.csv(inNetworkFile); 
> names(pairs) = c("No1", "No2")
>   print(head(pairs))
  No1  No2
1   1 1001
2   1 1002
3   1 1003
4   1 1004
5   2 1005
6   2 1006
>   if(debug==9) {     pairs = pairs[1:1000,]  }
>   pairs = pairs[ pairs$No1 != pairs$No2, ]  
> 
>   # label essential nodes, remove nonesse-nonessen pairs
>   pairs$essen1 = essenLookupTb[pairs$No1]
>   pairs$essen2 = essenLookupTb[pairs$No2]
>   #remove nonessen <-> nonessen intxn because they do not affect aging. 
>   pairs$remove = ifelse( pairs$essen1==F & pairs$essen2==F, T, F  )
>   pairs= pairs[! pairs$remove, ]  
>   # 31394 for one ms02 network
>   
>   #get connectivities per node
>   degreeTb = data.frame( table(c(pairs$No1, pairs$No2)))
>   summary(degreeTb); 
      Var1           Freq    
 1      :   1   Min.   :1.0  
 2      :   1   1st Qu.:1.0  
 3      :   1   Median :1.0  
 4      :   1   Mean   :1.6  
 5      :   1   3rd Qu.:1.0  
 6      :   1   Max.   :4.0  
 (Other):1244                
>   degreeTb[1:10,]
   Var1 Freq
1     1    4
2     2    4
3     3    4
4     4    4
5     5    4
6     6    4
7     7    4
8     8    4
9     9    4
10   10    4
>   
>       popAges = numeric(popSize)
>       time1 = date()
>       j=1; count = 0; 
>       while ((j <= popSize) && ( count < popSize*30)) {
+         count = count + 1;      
+         print(paste("count=",count))
+         currentNetworkAge = single_network_failure_v2(lambda1, lambda2, degreeThreshold, p, pairs, essenLookupTb)
+         if (currentNetworkAge > 0) {
+           popAges[j] = currentNetworkAge      
+           j = j+1
+         } 
+       }# end of j while-loop, population loop
[1] "count= 1"
[1] "count= 2"
[1] "count= 3"
[1] "count= 4"
[1] "count= 5"
[1] "count= 6"
[1] "count= 7"
[1] "count= 8"
[1] "count= 9"
[1] "count= 10"
[1] "count= 11"
[1] "count= 12"
[1] "count= 13"
[1] "count= 14"
[1] "count= 15"
[1] "count= 16"
[1] "count= 17"
[1] "count= 18"
[1] "count= 19"
[1] "count= 20"
[1] "count= 21"
[1] "count= 22"
[1] "count= 23"
[1] "count= 24"
[1] "count= 25"
[1] "count= 26"
[1] "count= 27"
[1] "count= 28"
[1] "count= 29"
[1] "count= 30"
[1] "count= 31"
[1] "count= 32"
[1] "count= 33"
[1] "count= 34"
[1] "count= 35"
[1] "count= 36"
[1] "count= 37"
[1] "count= 38"
[1] "count= 39"
[1] "count= 40"
[1] "count= 41"
[1] "count= 42"
[1] "count= 43"
[1] "count= 44"
[1] "count= 45"
[1] "count= 46"
[1] "count= 47"
[1] "count= 48"
[1] "count= 49"
[1] "count= 50"
[1] "count= 51"
[1] "count= 52"
[1] "count= 53"
[1] "count= 54"
[1] "count= 55"
[1] "count= 56"
[1] "count= 57"
[1] "count= 58"
[1] "count= 59"
[1] "count= 60"
[1] "count= 61"
[1] "count= 62"
[1] "count= 63"
[1] "count= 64"
[1] "count= 65"
[1] "count= 66"
[1] "count= 67"
[1] "count= 68"
[1] "count= 69"
[1] "count= 70"
[1] "count= 71"
[1] "count= 72"
[1] "count= 73"
[1] "count= 74"
[1] "count= 75"
[1] "count= 76"
[1] "count= 77"
[1] "count= 78"
[1] "count= 79"
[1] "count= 80"
[1] "count= 81"
[1] "count= 82"
[1] "count= 83"
[1] "count= 84"
[1] "count= 85"
[1] "count= 86"
[1] "count= 87"
[1] "count= 88"
[1] "count= 89"
[1] "count= 90"
[1] "count= 91"
[1] "count= 92"
[1] "count= 93"
[1] "count= 94"
[1] "count= 95"
[1] "count= 96"
[1] "count= 97"
[1] "count= 98"
[1] "count= 99"
[1] "count= 100"
[1] "count= 101"
[1] "count= 102"
[1] "count= 103"
[1] "count= 104"
[1] "count= 105"
[1] "count= 106"
[1] "count= 107"
[1] "count= 108"
[1] "count= 109"
[1] "count= 110"
[1] "count= 111"
[1] "count= 112"
[1] "count= 113"
[1] "count= 114"
[1] "count= 115"
[1] "count= 116"
[1] "count= 117"
[1] "count= 118"
[1] "count= 119"
[1] "count= 120"
[1] "count= 121"
[1] "count= 122"
[1] "count= 123"
[1] "count= 124"
[1] "count= 125"
[1] "count= 126"
[1] "count= 127"
[1] "count= 128"
[1] "count= 129"
[1] "count= 130"
[1] "count= 131"
[1] "count= 132"
[1] "count= 133"
[1] "count= 134"
[1] "count= 135"
[1] "count= 136"
[1] "count= 137"
[1] "count= 138"
[1] "count= 139"
[1] "count= 140"
[1] "count= 141"
[1] "count= 142"
[1] "count= 143"
[1] "count= 144"
[1] "count= 145"
[1] "count= 146"
[1] "count= 147"
[1] "count= 148"
[1] "count= 149"
[1] "count= 150"
[1] "count= 151"
[1] "count= 152"
[1] "count= 153"
[1] "count= 154"
[1] "count= 155"
[1] "count= 156"
[1] "count= 157"
[1] "count= 158"
[1] "count= 159"
[1] "count= 160"
[1] "count= 161"
[1] "count= 162"
[1] "count= 163"
[1] "count= 164"
[1] "count= 165"
[1] "count= 166"
[1] "count= 167"
[1] "count= 168"
[1] "count= 169"
[1] "count= 170"
[1] "count= 171"
[1] "count= 172"
[1] "count= 173"
[1] "count= 174"
[1] "count= 175"
[1] "count= 176"
[1] "count= 177"
[1] "count= 178"
[1] "count= 179"
[1] "count= 180"
[1] "count= 181"
[1] "count= 182"
[1] "count= 183"
[1] "count= 184"
[1] "count= 185"
[1] "count= 186"
[1] "count= 187"
[1] "count= 188"
[1] "count= 189"
[1] "count= 190"
[1] "count= 191"
[1] "count= 192"
[1] "count= 193"
[1] "count= 194"
[1] "count= 195"
[1] "count= 196"
[1] "count= 197"
[1] "count= 198"
[1] "count= 199"
[1] "count= 200"
[1] "count= 201"
[1] "count= 202"
[1] "count= 203"
[1] "count= 204"
[1] "count= 205"
[1] "count= 206"
[1] "count= 207"
[1] "count= 208"
[1] "count= 209"
[1] "count= 210"
[1] "count= 211"
[1] "count= 212"
[1] "count= 213"
[1] "count= 214"
[1] "count= 215"
[1] "count= 216"
[1] "count= 217"
[1] "count= 218"
[1] "count= 219"
[1] "count= 220"
[1] "count= 221"
[1] "count= 222"
[1] "count= 223"
[1] "count= 224"
[1] "count= 225"
[1] "count= 226"
[1] "count= 227"
[1] "count= 228"
[1] "count= 229"
[1] "count= 230"
[1] "count= 231"
[1] "count= 232"
[1] "count= 233"
[1] "count= 234"
[1] "count= 235"
[1] "count= 236"
[1] "count= 237"
[1] "count= 238"
[1] "count= 239"
[1] "count= 240"
[1] "count= 241"
[1] "count= 242"
[1] "count= 243"
[1] "count= 244"
[1] "count= 245"
[1] "count= 246"
[1] "count= 247"
[1] "count= 248"
[1] "count= 249"
[1] "count= 250"
[1] "count= 251"
[1] "count= 252"
[1] "count= 253"
[1] "count= 254"
[1] "count= 255"
[1] "count= 256"
[1] "count= 257"
[1] "count= 258"
[1] "count= 259"
[1] "count= 260"
[1] "count= 261"
[1] "count= 262"
[1] "count= 263"
[1] "count= 264"
[1] "count= 265"
[1] "count= 266"
[1] "count= 267"
[1] "count= 268"
[1] "count= 269"
[1] "count= 270"
[1] "count= 271"
[1] "count= 272"
[1] "count= 273"
[1] "count= 274"
[1] "count= 275"
[1] "count= 276"
[1] "count= 277"
[1] "count= 278"
[1] "count= 279"
[1] "count= 280"
[1] "count= 281"
[1] "count= 282"
[1] "count= 283"
[1] "count= 284"
[1] "count= 285"
[1] "count= 286"
[1] "count= 287"
[1] "count= 288"
[1] "count= 289"
[1] "count= 290"
[1] "count= 291"
[1] "count= 292"
[1] "count= 293"
[1] "count= 294"
[1] "count= 295"
[1] "count= 296"
[1] "count= 297"
[1] "count= 298"
[1] "count= 299"
[1] "count= 300"
[1] "count= 301"
[1] "count= 302"
[1] "count= 303"
[1] "count= 304"
[1] "count= 305"
[1] "count= 306"
[1] "count= 307"
[1] "count= 308"
[1] "count= 309"
[1] "count= 310"
[1] "count= 311"
[1] "count= 312"
[1] "count= 313"
[1] "count= 314"
[1] "count= 315"
[1] "count= 316"
[1] "count= 317"
[1] "count= 318"
[1] "count= 319"
[1] "count= 320"
[1] "count= 321"
[1] "count= 322"
[1] "count= 323"
[1] "count= 324"
[1] "count= 325"
[1] "count= 326"
[1] "count= 327"
[1] "count= 328"
[1] "count= 329"
[1] "count= 330"
[1] "count= 331"
[1] "count= 332"
[1] "count= 333"
[1] "count= 334"
[1] "count= 335"
[1] "count= 336"
[1] "count= 337"
[1] "count= 338"
[1] "count= 339"
[1] "count= 340"
[1] "count= 341"
[1] "count= 342"
[1] "count= 343"
[1] "count= 344"
[1] "count= 345"
[1] "count= 346"
[1] "count= 347"
[1] "count= 348"
[1] "count= 349"
[1] "count= 350"
[1] "count= 351"
[1] "count= 352"
[1] "count= 353"
[1] "count= 354"
[1] "count= 355"
[1] "count= 356"
[1] "count= 357"
[1] "count= 358"
[1] "count= 359"
[1] "count= 360"
[1] "count= 361"
[1] "count= 362"
[1] "count= 363"
[1] "count= 364"
[1] "count= 365"
[1] "count= 366"
[1] "count= 367"
[1] "count= 368"
[1] "count= 369"
[1] "count= 370"
[1] "count= 371"
[1] "count= 372"
[1] "count= 373"
[1] "count= 374"
[1] "count= 375"
[1] "count= 376"
[1] "count= 377"
[1] "count= 378"
[1] "count= 379"
[1] "count= 380"
[1] "count= 381"
[1] "count= 382"
[1] "count= 383"
[1] "count= 384"
[1] "count= 385"
[1] "count= 386"
[1] "count= 387"
[1] "count= 388"
[1] "count= 389"
[1] "count= 390"
[1] "count= 391"
[1] "count= 392"
[1] "count= 393"
[1] "count= 394"
[1] "count= 395"
[1] "count= 396"
[1] "count= 397"
[1] "count= 398"
[1] "count= 399"
[1] "count= 400"
[1] "count= 401"
[1] "count= 402"
[1] "count= 403"
[1] "count= 404"
[1] "count= 405"
[1] "count= 406"
[1] "count= 407"
[1] "count= 408"
[1] "count= 409"
[1] "count= 410"
[1] "count= 411"
[1] "count= 412"
[1] "count= 413"
[1] "count= 414"
[1] "count= 415"
[1] "count= 416"
[1] "count= 417"
[1] "count= 418"
[1] "count= 419"
[1] "count= 420"
[1] "count= 421"
[1] "count= 422"
[1] "count= 423"
[1] "count= 424"
[1] "count= 425"
[1] "count= 426"
[1] "count= 427"
[1] "count= 428"
[1] "count= 429"
[1] "count= 430"
[1] "count= 431"
[1] "count= 432"
[1] "count= 433"
[1] "count= 434"
[1] "count= 435"
[1] "count= 436"
[1] "count= 437"
[1] "count= 438"
[1] "count= 439"
[1] "count= 440"
[1] "count= 441"
[1] "count= 442"
[1] "count= 443"
[1] "count= 444"
[1] "count= 445"
[1] "count= 446"
[1] "count= 447"
[1] "count= 448"
[1] "count= 449"
[1] "count= 450"
[1] "count= 451"
[1] "count= 452"
[1] "count= 453"
[1] "count= 454"
[1] "count= 455"
[1] "count= 456"
[1] "count= 457"
[1] "count= 458"
[1] "count= 459"
[1] "count= 460"
[1] "count= 461"
[1] "count= 462"
[1] "count= 463"
[1] "count= 464"
[1] "count= 465"
[1] "count= 466"
[1] "count= 467"
[1] "count= 468"
[1] "count= 469"
[1] "count= 470"
[1] "count= 471"
[1] "count= 472"
[1] "count= 473"
[1] "count= 474"
[1] "count= 475"
[1] "count= 476"
[1] "count= 477"
[1] "count= 478"
[1] "count= 479"
[1] "count= 480"
[1] "count= 481"
[1] "count= 482"
[1] "count= 483"
[1] "count= 484"
[1] "count= 485"
[1] "count= 486"
[1] "count= 487"
[1] "count= 488"
[1] "count= 489"
[1] "count= 490"
[1] "count= 491"
[1] "count= 492"
[1] "count= 493"
[1] "count= 494"
[1] "count= 495"
[1] "count= 496"
[1] "count= 497"
[1] "count= 498"
[1] "count= 499"
[1] "count= 500"
[1] "count= 501"
[1] "count= 502"
[1] "count= 503"
[1] "count= 504"
[1] "count= 505"
[1] "count= 506"
[1] "count= 507"
[1] "count= 508"
[1] "count= 509"
[1] "count= 510"
[1] "count= 511"
[1] "count= 512"
[1] "count= 513"
[1] "count= 514"
[1] "count= 515"
[1] "count= 516"
[1] "count= 517"
[1] "count= 518"
[1] "count= 519"
[1] "count= 520"
[1] "count= 521"
[1] "count= 522"
[1] "count= 523"
[1] "count= 524"
[1] "count= 525"
[1] "count= 526"
[1] "count= 527"
[1] "count= 528"
[1] "count= 529"
[1] "count= 530"
[1] "count= 531"
[1] "count= 532"
[1] "count= 533"
[1] "count= 534"
[1] "count= 535"
[1] "count= 536"
[1] "count= 537"
[1] "count= 538"
[1] "count= 539"
[1] "count= 540"
[1] "count= 541"
[1] "count= 542"
[1] "count= 543"
[1] "count= 544"
[1] "count= 545"
[1] "count= 546"
[1] "count= 547"
[1] "count= 548"
[1] "count= 549"
[1] "count= 550"
[1] "count= 551"
[1] "count= 552"
[1] "count= 553"
[1] "count= 554"
[1] "count= 555"
[1] "count= 556"
[1] "count= 557"
[1] "count= 558"
[1] "count= 559"
[1] "count= 560"
[1] "count= 561"
[1] "count= 562"
[1] "count= 563"
[1] "count= 564"
[1] "count= 565"
[1] "count= 566"
[1] "count= 567"
[1] "count= 568"
[1] "count= 569"
[1] "count= 570"
[1] "count= 571"
[1] "count= 572"
[1] "count= 573"
[1] "count= 574"
[1] "count= 575"
[1] "count= 576"
[1] "count= 577"
[1] "count= 578"
[1] "count= 579"
[1] "count= 580"
[1] "count= 581"
[1] "count= 582"
[1] "count= 583"
[1] "count= 584"
[1] "count= 585"
[1] "count= 586"
[1] "count= 587"
[1] "count= 588"
[1] "count= 589"
[1] "count= 590"
[1] "count= 591"
[1] "count= 592"
[1] "count= 593"
[1] "count= 594"
[1] "count= 595"
[1] "count= 596"
[1] "count= 597"
[1] "count= 598"
[1] "count= 599"
[1] "count= 600"
[1] "count= 601"
[1] "count= 602"
[1] "count= 603"
[1] "count= 604"
[1] "count= 605"
[1] "count= 606"
[1] "count= 607"
[1] "count= 608"
[1] "count= 609"
[1] "count= 610"
[1] "count= 611"
[1] "count= 612"
[1] "count= 613"
[1] "count= 614"
[1] "count= 615"
[1] "count= 616"
[1] "count= 617"
[1] "count= 618"
[1] "count= 619"
[1] "count= 620"
[1] "count= 621"
[1] "count= 622"
[1] "count= 623"
[1] "count= 624"
[1] "count= 625"
[1] "count= 626"
[1] "count= 627"
[1] "count= 628"
[1] "count= 629"
[1] "count= 630"
[1] "count= 631"
[1] "count= 632"
[1] "count= 633"
[1] "count= 634"
[1] "count= 635"
[1] "count= 636"
[1] "count= 637"
[1] "count= 638"
[1] "count= 639"
[1] "count= 640"
[1] "count= 641"
[1] "count= 642"
[1] "count= 643"
[1] "count= 644"
[1] "count= 645"
[1] "count= 646"
[1] "count= 647"
[1] "count= 648"
[1] "count= 649"
[1] "count= 650"
[1] "count= 651"
[1] "count= 652"
[1] "count= 653"
[1] "count= 654"
[1] "count= 655"
[1] "count= 656"
[1] "count= 657"
[1] "count= 658"
[1] "count= 659"
[1] "count= 660"
[1] "count= 661"
[1] "count= 662"
[1] "count= 663"
[1] "count= 664"
[1] "count= 665"
[1] "count= 666"
[1] "count= 667"
[1] "count= 668"
[1] "count= 669"
[1] "count= 670"
[1] "count= 671"
[1] "count= 672"
[1] "count= 673"
[1] "count= 674"
[1] "count= 675"
[1] "count= 676"
[1] "count= 677"
[1] "count= 678"
[1] "count= 679"
[1] "count= 680"
[1] "count= 681"
[1] "count= 682"
[1] "count= 683"
[1] "count= 684"
[1] "count= 685"
[1] "count= 686"
[1] "count= 687"
[1] "count= 688"
[1] "count= 689"
[1] "count= 690"
[1] "count= 691"
[1] "count= 692"
[1] "count= 693"
[1] "count= 694"
[1] "count= 695"
[1] "count= 696"
[1] "count= 697"
[1] "count= 698"
[1] "count= 699"
[1] "count= 700"
[1] "count= 701"
[1] "count= 702"
[1] "count= 703"
[1] "count= 704"
[1] "count= 705"
[1] "count= 706"
[1] "count= 707"
[1] "count= 708"
[1] "count= 709"
[1] "count= 710"
[1] "count= 711"
[1] "count= 712"
[1] "count= 713"
[1] "count= 714"
[1] "count= 715"
[1] "count= 716"
[1] "count= 717"
[1] "count= 718"
[1] "count= 719"
[1] "count= 720"
[1] "count= 721"
[1] "count= 722"
[1] "count= 723"
[1] "count= 724"
[1] "count= 725"
[1] "count= 726"
[1] "count= 727"
[1] "count= 728"
[1] "count= 729"
[1] "count= 730"
[1] "count= 731"
[1] "count= 732"
[1] "count= 733"
[1] "count= 734"
[1] "count= 735"
[1] "count= 736"
[1] "count= 737"
[1] "count= 738"
[1] "count= 739"
[1] "count= 740"
[1] "count= 741"
[1] "count= 742"
[1] "count= 743"
[1] "count= 744"
[1] "count= 745"
[1] "count= 746"
[1] "count= 747"
[1] "count= 748"
[1] "count= 749"
[1] "count= 750"
[1] "count= 751"
[1] "count= 752"
[1] "count= 753"
[1] "count= 754"
[1] "count= 755"
[1] "count= 756"
[1] "count= 757"
[1] "count= 758"
[1] "count= 759"
[1] "count= 760"
[1] "count= 761"
[1] "count= 762"
[1] "count= 763"
[1] "count= 764"
[1] "count= 765"
[1] "count= 766"
[1] "count= 767"
[1] "count= 768"
[1] "count= 769"
[1] "count= 770"
[1] "count= 771"
[1] "count= 772"
[1] "count= 773"
[1] "count= 774"
[1] "count= 775"
[1] "count= 776"
[1] "count= 777"
[1] "count= 778"
[1] "count= 779"
[1] "count= 780"
[1] "count= 781"
[1] "count= 782"
[1] "count= 783"
[1] "count= 784"
[1] "count= 785"
[1] "count= 786"
[1] "count= 787"
[1] "count= 788"
[1] "count= 789"
[1] "count= 790"
[1] "count= 791"
[1] "count= 792"
[1] "count= 793"
[1] "count= 794"
[1] "count= 795"
[1] "count= 796"
[1] "count= 797"
[1] "count= 798"
[1] "count= 799"
[1] "count= 800"
[1] "count= 801"
[1] "count= 802"
[1] "count= 803"
[1] "count= 804"
[1] "count= 805"
[1] "count= 806"
[1] "count= 807"
[1] "count= 808"
[1] "count= 809"
[1] "count= 810"
[1] "count= 811"
[1] "count= 812"
[1] "count= 813"
[1] "count= 814"
[1] "count= 815"
[1] "count= 816"
[1] "count= 817"
[1] "count= 818"
[1] "count= 819"
[1] "count= 820"
[1] "count= 821"
[1] "count= 822"
[1] "count= 823"
[1] "count= 824"
[1] "count= 825"
[1] "count= 826"
[1] "count= 827"
[1] "count= 828"
[1] "count= 829"
[1] "count= 830"
[1] "count= 831"
[1] "count= 832"
[1] "count= 833"
[1] "count= 834"
[1] "count= 835"
[1] "count= 836"
[1] "count= 837"
[1] "count= 838"
[1] "count= 839"
[1] "count= 840"
[1] "count= 841"
[1] "count= 842"
[1] "count= 843"
[1] "count= 844"
[1] "count= 845"
[1] "count= 846"
[1] "count= 847"
[1] "count= 848"
[1] "count= 849"
[1] "count= 850"
[1] "count= 851"
[1] "count= 852"
[1] "count= 853"
[1] "count= 854"
[1] "count= 855"
[1] "count= 856"
[1] "count= 857"
[1] "count= 858"
[1] "count= 859"
[1] "count= 860"
[1] "count= 861"
[1] "count= 862"
[1] "count= 863"
[1] "count= 864"
[1] "count= 865"
[1] "count= 866"
[1] "count= 867"
[1] "count= 868"
[1] "count= 869"
[1] "count= 870"
[1] "count= 871"
[1] "count= 872"
[1] "count= 873"
[1] "count= 874"
[1] "count= 875"
[1] "count= 876"
[1] "count= 877"
[1] "count= 878"
[1] "count= 879"
[1] "count= 880"
[1] "count= 881"
[1] "count= 882"
[1] "count= 883"
[1] "count= 884"
[1] "count= 885"
[1] "count= 886"
[1] "count= 887"
[1] "count= 888"
[1] "count= 889"
[1] "count= 890"
[1] "count= 891"
[1] "count= 892"
[1] "count= 893"
[1] "count= 894"
[1] "count= 895"
[1] "count= 896"
[1] "count= 897"
[1] "count= 898"
[1] "count= 899"
[1] "count= 900"
[1] "count= 901"
[1] "count= 902"
[1] "count= 903"
[1] "count= 904"
[1] "count= 905"
[1] "count= 906"
[1] "count= 907"
[1] "count= 908"
[1] "count= 909"
[1] "count= 910"
[1] "count= 911"
[1] "count= 912"
[1] "count= 913"
[1] "count= 914"
[1] "count= 915"
[1] "count= 916"
[1] "count= 917"
[1] "count= 918"
[1] "count= 919"
[1] "count= 920"
[1] "count= 921"
[1] "count= 922"
[1] "count= 923"
[1] "count= 924"
[1] "count= 925"
[1] "count= 926"
[1] "count= 927"
[1] "count= 928"
[1] "count= 929"
[1] "count= 930"
[1] "count= 931"
[1] "count= 932"
[1] "count= 933"
[1] "count= 934"
[1] "count= 935"
[1] "count= 936"
[1] "count= 937"
[1] "count= 938"
[1] "count= 939"
[1] "count= 940"
[1] "count= 941"
[1] "count= 942"
[1] "count= 943"
[1] "count= 944"
[1] "count= 945"
[1] "count= 946"
[1] "count= 947"
[1] "count= 948"
[1] "count= 949"
[1] "count= 950"
[1] "count= 951"
[1] "count= 952"
[1] "count= 953"
[1] "count= 954"
[1] "count= 955"
[1] "count= 956"
[1] "count= 957"
[1] "count= 958"
[1] "count= 959"
[1] "count= 960"
[1] "count= 961"
[1] "count= 962"
[1] "count= 963"
[1] "count= 964"
[1] "count= 965"
[1] "count= 966"
[1] "count= 967"
[1] "count= 968"
[1] "count= 969"
[1] "count= 970"
[1] "count= 971"
[1] "count= 972"
[1] "count= 973"
[1] "count= 974"
[1] "count= 975"
[1] "count= 976"
[1] "count= 977"
[1] "count= 978"
[1] "count= 979"
[1] "count= 980"
[1] "count= 981"
[1] "count= 982"
[1] "count= 983"
[1] "count= 984"
[1] "count= 985"
[1] "count= 986"
[1] "count= 987"
[1] "count= 988"
[1] "count= 989"
[1] "count= 990"
[1] "count= 991"
[1] "count= 992"
[1] "count= 993"
[1] "count= 994"
[1] "count= 995"
[1] "count= 996"
[1] "count= 997"
[1] "count= 998"
[1] "count= 999"
[1] "count= 1000"
>       
>       timestamp = format(Sys.time(), "%Y%b%d_%H%M%S")
>       age.file.name=paste("threshold", degreeThreshold, "p", p, "lambda1", lambda1, 
+                           "lambda2", lambda2,'popsize',popSize, "time",timestamp, "csv", sep="." )
>       full_age_file = paste( outputdir, '/', age.file.name, sep='')
>       
>       write.csv( popAges, full_age_file, row.names=F)
>       
> 

R version 3.2.1 (2015-06-18) -- "World-Famous Astronaut"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> ##########################################
> #2015Dec a generic network simulation code with files names as input
> #2015Oct13, use numeric lookup table for essential genes.
> #2014March3, redo ginppi simulation witht same parameter for ms02networks. 
> # 2014 Feb 17, change name "20131221.DIPandGIN.sim.aging_v2.R" to "net-aging-sim-2014Feb17.R"
> # 2013 Dec 20, merge DIP PPI and Genetic Inxt Net -> Multi-net approach
> #rm(list=ls())
> 
> single_network_failure_v2 = function(lambda1, lambda2=lambda1/10, threshold=4, p, pairs, essenLookupTb ) {
+   # single network failure simulation, 20151013Tue
+   # lambda1: First exponential constant failure rate for edges with degree > threshold
+   # lambda2: Second exponential constant failure rate for edges with degree <= threshold
+   # threshold: degree threshold for lambda1 and lambda2
+   # pairs: network in pairwide format, using numeric NOs 20151013
+   # essenLookupTb: lookup table for essential and nonessential genes, numeric values 
+   ## for debug:   lambda1 = 1/50; lambda2= lambda1/10; threshold=4; p=0.8
+   
+   inpairs = pairs[,3:4] #bookkeeping  
+   names(inpairs) = c('No1','No2')
+   
+   #get connectivities per node
+   degreeTb = data.frame( table(c(inpairs$No1, inpairs$No2)))
+   names(degreeTb) = c("No", "degree")
+   degreeTb$moduleAge = NA;
+   
+   for( i in 1:length(degreeTb[,1])){
+     if ( essenLookupTb[ degreeTb$No[i] ]) { #essential node
+       lambda = ifelse( degreeTb$degree[i] >= threshold, lambda1, lambda2)
+       age = rexp( degreeTb$degree[i], rate=lambda ) #exponential age
+       if(degreeTb$degree[i] >= threshold){
+         active = runif(degreeTb$degree[i])  #uniform interaction stochasticity
+         active = ifelse( active<=p, 1, NA  ) #pick active interactions
+         if( sum(active, na.rm=T) > 0 ){ #there should be at least 1 active intxn
+           age = age * active # only active interactions for modular age estimation
+           degreeTb$moduleAge[i] = max(age, na.rm=T) #maximum intxn age is the module age
+         } else {# when no active intxn is available 
+           degreeTb$moduleAge[i] = 0; #this module is born dead.
+         }
+       } else { # for degree < threshold, no stochasticity is applied. 
+         degreeTb$moduleAge[i] = max(age, na.rm=T) #maximum intxn age is the module age
+       }
+     } else {# non-essential node
+       degreeTb$moduleAge[i] = NA 
+     }
+   }
+   
+   summary(degreeTb)
+   currentNetworkAge = min(degreeTb$moduleAge, na.rm=T)
+ }
> #                    1                     2           3      4           5          6   7     8
> # R -f file --args pairwise-networkFile LookUpTbFile lambda1 lambda2 degreeThreshold p popSize outputdir
> # R -f 20151215-netsim-generic.R --args net1/Degree4N1000_network.csv  net1/net1/Degree4N1000_EssenLookupTb.csv 0.002 0.0002 5 1.0 1000 net1
> # R -f 20151215-netsim-generic.R --args data/merged_PPIGIN_Factorized2015Oct13.csv data/essntialGeneLookupTable_20151013.csv   0.002 0.0002 4 0.9 5
> 
> options(echo=TRUE) # if you want see commands in output file
> args <- commandArgs(trailingOnly = TRUE)
> print(args)
[1] "net1/Degree4N1000_network.csv"           
[2] "net1/net1/Degree4N1000_EssenLookupTb.csv"
[3] "0.002"                                   
[4] "0.0002"                                  
[5] "5"                                       
[6] "0.75"                                    
[7] "1000"                                    
[8] "net1"                                    
> inNetworkFile = args[1];
> inLookupTbFile = args[2];
> lambda1 = as.numeric(args[3]); lambda1;
[1] 0.002
> lambda2 = as.numeric(args[4]); lambda2;
[1] 2e-04
> degreeThreshold = as.integer((args[5])); degreeThreshold
[1] 5
> p = as.numeric(args[6]); p;
[1] 0.75
> popSize = as.numeric(args[7]); popSize;
[1] 1000
> outputdir = args[8];
> 
> list.files(path='net1', )
[1] "Degree4N1000_EssenLookupTb.csv"                                                       
[2] "Degree4N1000_network.csv"                                                             
[3] "threshold.5.p.0.8.lambda1.0.002.lambda2.2e-04.popsize.1000.time.2015Dec16_095054.csv" 
[4] "threshold.5.p.0.85.lambda1.0.002.lambda2.2e-04.popsize.1000.time.2015Dec16_095024.csv"
[5] "threshold.5.p.0.9.lambda1.0.002.lambda2.2e-04.popsize.1000.time.2015Dec16_094953.csv" 
[6] "threshold.5.p.0.95.lambda1.0.002.lambda2.2e-04.popsize.1000.time.2015Dec16_094923.csv"
> debug = 9; 
> 
> #essential gene info
> #essenTb = read.csv("data/SummaryRegressionHetHomFactorized2015Oct13.csv", colClasses=rep('character', 9))
> #essenLookupTb = read.csv("net1/Degree4N1000_EssenLookupTb.csv", row.names = 1)
> essenLookupTb = read.csv(inNetworkFile);
> essenLookupTb = essenLookupTb[,1];
> 
> # inNetworFile = "net1/Degree4N1000_network.csv"
> pairs = read.csv(inNetworkFile); 
> names(pairs) = c("No1", "No2")
>   print(head(pairs))
  No1  No2
1   1 1001
2   1 1002
3   1 1003
4   1 1004
5   2 1005
6   2 1006
>   if(debug==9) {     pairs = pairs[1:1000,]  }
>   pairs = pairs[ pairs$No1 != pairs$No2, ]  
> 
>   # label essential nodes, remove nonesse-nonessen pairs
>   pairs$essen1 = essenLookupTb[pairs$No1]
>   pairs$essen2 = essenLookupTb[pairs$No2]
>   #remove nonessen <-> nonessen intxn because they do not affect aging. 
>   pairs$remove = ifelse( pairs$essen1==F & pairs$essen2==F, T, F  )
>   pairs= pairs[! pairs$remove, ]  
>   # 31394 for one ms02 network
>   
>   #get connectivities per node
>   degreeTb = data.frame( table(c(pairs$No1, pairs$No2)))
>   summary(degreeTb); 
      Var1           Freq    
 1      :   1   Min.   :1.0  
 2      :   1   1st Qu.:1.0  
 3      :   1   Median :1.0  
 4      :   1   Mean   :1.6  
 5      :   1   3rd Qu.:1.0  
 6      :   1   Max.   :4.0  
 (Other):1244                
>   degreeTb[1:10,]
   Var1 Freq
1     1    4
2     2    4
3     3    4
4     4    4
5     5    4
6     6    4
7     7    4
8     8    4
9     9    4
10   10    4
>   
>       popAges = numeric(popSize)
>       time1 = date()
>       j=1; count = 0; 
>       while ((j <= popSize) && ( count < popSize*30)) {
+         count = count + 1;      
+         print(paste("count=",count))
+         currentNetworkAge = single_network_failure_v2(lambda1, lambda2, degreeThreshold, p, pairs, essenLookupTb)
+         if (currentNetworkAge > 0) {
+           popAges[j] = currentNetworkAge      
+           j = j+1
+         } 
+       }# end of j while-loop, population loop
[1] "count= 1"
[1] "count= 2"
[1] "count= 3"
[1] "count= 4"
[1] "count= 5"
[1] "count= 6"
[1] "count= 7"
[1] "count= 8"
[1] "count= 9"
[1] "count= 10"
[1] "count= 11"
[1] "count= 12"
[1] "count= 13"
[1] "count= 14"
[1] "count= 15"
[1] "count= 16"
[1] "count= 17"
[1] "count= 18"
[1] "count= 19"
[1] "count= 20"
[1] "count= 21"
[1] "count= 22"
[1] "count= 23"
[1] "count= 24"
[1] "count= 25"
[1] "count= 26"
[1] "count= 27"
[1] "count= 28"
[1] "count= 29"
[1] "count= 30"
[1] "count= 31"
[1] "count= 32"
[1] "count= 33"
[1] "count= 34"
[1] "count= 35"
[1] "count= 36"
[1] "count= 37"
[1] "count= 38"
[1] "count= 39"
[1] "count= 40"
[1] "count= 41"
[1] "count= 42"
[1] "count= 43"
[1] "count= 44"
[1] "count= 45"
[1] "count= 46"
[1] "count= 47"
[1] "count= 48"
[1] "count= 49"
[1] "count= 50"
[1] "count= 51"
[1] "count= 52"
[1] "count= 53"
[1] "count= 54"
[1] "count= 55"
[1] "count= 56"
[1] "count= 57"
[1] "count= 58"
[1] "count= 59"
[1] "count= 60"
[1] "count= 61"
[1] "count= 62"
[1] "count= 63"
[1] "count= 64"
[1] "count= 65"
[1] "count= 66"
[1] "count= 67"
[1] "count= 68"
[1] "count= 69"
[1] "count= 70"
[1] "count= 71"
[1] "count= 72"
[1] "count= 73"
[1] "count= 74"
[1] "count= 75"
[1] "count= 76"
[1] "count= 77"
[1] "count= 78"
[1] "count= 79"
[1] "count= 80"
[1] "count= 81"
[1] "count= 82"
[1] "count= 83"
[1] "count= 84"
[1] "count= 85"
[1] "count= 86"
[1] "count= 87"
[1] "count= 88"
[1] "count= 89"
[1] "count= 90"
[1] "count= 91"
[1] "count= 92"
[1] "count= 93"
[1] "count= 94"
[1] "count= 95"
[1] "count= 96"
[1] "count= 97"
[1] "count= 98"
[1] "count= 99"
[1] "count= 100"
[1] "count= 101"
[1] "count= 102"
[1] "count= 103"
[1] "count= 104"
[1] "count= 105"
[1] "count= 106"
[1] "count= 107"
[1] "count= 108"
[1] "count= 109"
[1] "count= 110"
[1] "count= 111"
[1] "count= 112"
[1] "count= 113"
[1] "count= 114"
[1] "count= 115"
[1] "count= 116"
[1] "count= 117"
[1] "count= 118"
[1] "count= 119"
[1] "count= 120"
[1] "count= 121"
[1] "count= 122"
[1] "count= 123"
[1] "count= 124"
[1] "count= 125"
[1] "count= 126"
[1] "count= 127"
[1] "count= 128"
[1] "count= 129"
[1] "count= 130"
[1] "count= 131"
[1] "count= 132"
[1] "count= 133"
[1] "count= 134"
[1] "count= 135"
[1] "count= 136"
[1] "count= 137"
[1] "count= 138"
[1] "count= 139"
[1] "count= 140"
[1] "count= 141"
[1] "count= 142"
[1] "count= 143"
[1] "count= 144"
[1] "count= 145"
[1] "count= 146"
[1] "count= 147"
[1] "count= 148"
[1] "count= 149"
[1] "count= 150"
[1] "count= 151"
[1] "count= 152"
[1] "count= 153"
[1] "count= 154"
[1] "count= 155"
[1] "count= 156"
[1] "count= 157"
[1] "count= 158"
[1] "count= 159"
[1] "count= 160"
[1] "count= 161"
[1] "count= 162"
[1] "count= 163"
[1] "count= 164"
[1] "count= 165"
[1] "count= 166"
[1] "count= 167"
[1] "count= 168"
[1] "count= 169"
[1] "count= 170"
[1] "count= 171"
[1] "count= 172"
[1] "count= 173"
[1] "count= 174"
[1] "count= 175"
[1] "count= 176"
[1] "count= 177"
[1] "count= 178"
[1] "count= 179"
[1] "count= 180"
[1] "count= 181"
[1] "count= 182"
[1] "count= 183"
[1] "count= 184"
[1] "count= 185"
[1] "count= 186"
[1] "count= 187"
[1] "count= 188"
[1] "count= 189"
[1] "count= 190"
[1] "count= 191"
[1] "count= 192"
[1] "count= 193"
[1] "count= 194"
[1] "count= 195"
[1] "count= 196"
[1] "count= 197"
[1] "count= 198"
[1] "count= 199"
[1] "count= 200"
[1] "count= 201"
[1] "count= 202"
[1] "count= 203"
[1] "count= 204"
[1] "count= 205"
[1] "count= 206"
[1] "count= 207"
[1] "count= 208"
[1] "count= 209"
[1] "count= 210"
[1] "count= 211"
[1] "count= 212"
[1] "count= 213"
[1] "count= 214"
[1] "count= 215"
[1] "count= 216"
[1] "count= 217"
[1] "count= 218"
[1] "count= 219"
[1] "count= 220"
[1] "count= 221"
[1] "count= 222"
[1] "count= 223"
[1] "count= 224"
[1] "count= 225"
[1] "count= 226"
[1] "count= 227"
[1] "count= 228"
[1] "count= 229"
[1] "count= 230"
[1] "count= 231"
[1] "count= 232"
[1] "count= 233"
[1] "count= 234"
[1] "count= 235"
[1] "count= 236"
[1] "count= 237"
[1] "count= 238"
[1] "count= 239"
[1] "count= 240"
[1] "count= 241"
[1] "count= 242"
[1] "count= 243"
[1] "count= 244"
[1] "count= 245"
[1] "count= 246"
[1] "count= 247"
[1] "count= 248"
[1] "count= 249"
[1] "count= 250"
[1] "count= 251"
[1] "count= 252"
[1] "count= 253"
[1] "count= 254"
[1] "count= 255"
[1] "count= 256"
[1] "count= 257"
[1] "count= 258"
[1] "count= 259"
[1] "count= 260"
[1] "count= 261"
[1] "count= 262"
[1] "count= 263"
[1] "count= 264"
[1] "count= 265"
[1] "count= 266"
[1] "count= 267"
[1] "count= 268"
[1] "count= 269"
[1] "count= 270"
[1] "count= 271"
[1] "count= 272"
[1] "count= 273"
[1] "count= 274"
[1] "count= 275"
[1] "count= 276"
[1] "count= 277"
[1] "count= 278"
[1] "count= 279"
[1] "count= 280"
[1] "count= 281"
[1] "count= 282"
[1] "count= 283"
[1] "count= 284"
[1] "count= 285"
[1] "count= 286"
[1] "count= 287"
[1] "count= 288"
[1] "count= 289"
[1] "count= 290"
[1] "count= 291"
[1] "count= 292"
[1] "count= 293"
[1] "count= 294"
[1] "count= 295"
[1] "count= 296"
[1] "count= 297"
[1] "count= 298"
[1] "count= 299"
[1] "count= 300"
[1] "count= 301"
[1] "count= 302"
[1] "count= 303"
[1] "count= 304"
[1] "count= 305"
[1] "count= 306"
[1] "count= 307"
[1] "count= 308"
[1] "count= 309"
[1] "count= 310"
[1] "count= 311"
[1] "count= 312"
[1] "count= 313"
[1] "count= 314"
[1] "count= 315"
[1] "count= 316"
[1] "count= 317"
[1] "count= 318"
[1] "count= 319"
[1] "count= 320"
[1] "count= 321"
[1] "count= 322"
[1] "count= 323"
[1] "count= 324"
[1] "count= 325"
[1] "count= 326"
[1] "count= 327"
[1] "count= 328"
[1] "count= 329"
[1] "count= 330"
[1] "count= 331"
[1] "count= 332"
[1] "count= 333"
[1] "count= 334"
[1] "count= 335"
[1] "count= 336"
[1] "count= 337"
[1] "count= 338"
[1] "count= 339"
[1] "count= 340"
[1] "count= 341"
[1] "count= 342"
[1] "count= 343"
[1] "count= 344"
[1] "count= 345"
[1] "count= 346"
[1] "count= 347"
[1] "count= 348"
[1] "count= 349"
[1] "count= 350"
[1] "count= 351"
[1] "count= 352"
[1] "count= 353"
[1] "count= 354"
[1] "count= 355"
[1] "count= 356"
[1] "count= 357"
[1] "count= 358"
[1] "count= 359"
[1] "count= 360"
[1] "count= 361"
[1] "count= 362"
[1] "count= 363"
[1] "count= 364"
[1] "count= 365"
[1] "count= 366"
[1] "count= 367"
[1] "count= 368"
[1] "count= 369"
[1] "count= 370"
[1] "count= 371"
[1] "count= 372"
[1] "count= 373"
[1] "count= 374"
[1] "count= 375"
[1] "count= 376"
[1] "count= 377"
[1] "count= 378"
[1] "count= 379"
[1] "count= 380"
[1] "count= 381"
[1] "count= 382"
[1] "count= 383"
[1] "count= 384"
[1] "count= 385"
[1] "count= 386"
[1] "count= 387"
[1] "count= 388"
[1] "count= 389"
[1] "count= 390"
[1] "count= 391"
[1] "count= 392"
[1] "count= 393"
[1] "count= 394"
[1] "count= 395"
[1] "count= 396"
[1] "count= 397"
[1] "count= 398"
[1] "count= 399"
[1] "count= 400"
[1] "count= 401"
[1] "count= 402"
[1] "count= 403"
[1] "count= 404"
[1] "count= 405"
[1] "count= 406"
[1] "count= 407"
[1] "count= 408"
[1] "count= 409"
[1] "count= 410"
[1] "count= 411"
[1] "count= 412"
[1] "count= 413"
[1] "count= 414"
[1] "count= 415"
[1] "count= 416"
[1] "count= 417"
[1] "count= 418"
[1] "count= 419"
[1] "count= 420"
[1] "count= 421"
[1] "count= 422"
[1] "count= 423"
[1] "count= 424"
[1] "count= 425"
[1] "count= 426"
[1] "count= 427"
[1] "count= 428"
[1] "count= 429"
[1] "count= 430"
[1] "count= 431"
[1] "count= 432"
[1] "count= 433"
[1] "count= 434"
[1] "count= 435"
[1] "count= 436"
[1] "count= 437"
[1] "count= 438"
[1] "count= 439"
[1] "count= 440"
[1] "count= 441"
[1] "count= 442"
[1] "count= 443"
[1] "count= 444"
[1] "count= 445"
[1] "count= 446"
[1] "count= 447"
[1] "count= 448"
[1] "count= 449"
[1] "count= 450"
[1] "count= 451"
[1] "count= 452"
[1] "count= 453"
[1] "count= 454"
[1] "count= 455"
[1] "count= 456"
[1] "count= 457"
[1] "count= 458"
[1] "count= 459"
[1] "count= 460"
[1] "count= 461"
[1] "count= 462"
[1] "count= 463"
[1] "count= 464"
[1] "count= 465"
[1] "count= 466"
[1] "count= 467"
[1] "count= 468"
[1] "count= 469"
[1] "count= 470"
[1] "count= 471"
[1] "count= 472"
[1] "count= 473"
[1] "count= 474"
[1] "count= 475"
[1] "count= 476"
[1] "count= 477"
[1] "count= 478"
[1] "count= 479"
[1] "count= 480"
[1] "count= 481"
[1] "count= 482"
[1] "count= 483"
[1] "count= 484"
[1] "count= 485"
[1] "count= 486"
[1] "count= 487"
[1] "count= 488"
[1] "count= 489"
[1] "count= 490"
[1] "count= 491"
[1] "count= 492"
[1] "count= 493"
[1] "count= 494"
[1] "count= 495"
[1] "count= 496"
[1] "count= 497"
[1] "count= 498"
[1] "count= 499"
[1] "count= 500"
[1] "count= 501"
[1] "count= 502"
[1] "count= 503"
[1] "count= 504"
[1] "count= 505"
[1] "count= 506"
[1] "count= 507"
[1] "count= 508"
[1] "count= 509"
[1] "count= 510"
[1] "count= 511"
[1] "count= 512"
[1] "count= 513"
[1] "count= 514"
[1] "count= 515"
[1] "count= 516"
[1] "count= 517"
[1] "count= 518"
[1] "count= 519"
[1] "count= 520"
[1] "count= 521"
[1] "count= 522"
[1] "count= 523"
[1] "count= 524"
[1] "count= 525"
[1] "count= 526"
[1] "count= 527"
[1] "count= 528"
[1] "count= 529"
[1] "count= 530"
[1] "count= 531"
[1] "count= 532"
[1] "count= 533"
[1] "count= 534"
[1] "count= 535"
[1] "count= 536"
[1] "count= 537"
[1] "count= 538"
[1] "count= 539"
[1] "count= 540"
[1] "count= 541"
[1] "count= 542"
[1] "count= 543"
[1] "count= 544"
[1] "count= 545"
[1] "count= 546"
[1] "count= 547"
[1] "count= 548"
[1] "count= 549"
[1] "count= 550"
[1] "count= 551"
[1] "count= 552"
[1] "count= 553"
[1] "count= 554"
[1] "count= 555"
[1] "count= 556"
[1] "count= 557"
[1] "count= 558"
[1] "count= 559"
[1] "count= 560"
[1] "count= 561"
[1] "count= 562"
[1] "count= 563"
[1] "count= 564"
[1] "count= 565"
[1] "count= 566"
[1] "count= 567"
[1] "count= 568"
[1] "count= 569"
[1] "count= 570"
[1] "count= 571"
[1] "count= 572"
[1] "count= 573"
[1] "count= 574"
[1] "count= 575"
[1] "count= 576"
[1] "count= 577"
[1] "count= 578"
[1] "count= 579"
[1] "count= 580"
[1] "count= 581"
[1] "count= 582"
[1] "count= 583"
[1] "count= 584"
[1] "count= 585"
[1] "count= 586"
[1] "count= 587"
[1] "count= 588"
[1] "count= 589"
[1] "count= 590"
[1] "count= 591"
[1] "count= 592"
[1] "count= 593"
[1] "count= 594"
[1] "count= 595"
[1] "count= 596"
[1] "count= 597"
[1] "count= 598"
[1] "count= 599"
[1] "count= 600"
[1] "count= 601"
[1] "count= 602"
[1] "count= 603"
[1] "count= 604"
[1] "count= 605"
[1] "count= 606"
[1] "count= 607"
[1] "count= 608"
[1] "count= 609"
[1] "count= 610"
[1] "count= 611"
[1] "count= 612"
[1] "count= 613"
[1] "count= 614"
[1] "count= 615"
[1] "count= 616"
[1] "count= 617"
[1] "count= 618"
[1] "count= 619"
[1] "count= 620"
[1] "count= 621"
[1] "count= 622"
[1] "count= 623"
[1] "count= 624"
[1] "count= 625"
[1] "count= 626"
[1] "count= 627"
[1] "count= 628"
[1] "count= 629"
[1] "count= 630"
[1] "count= 631"
[1] "count= 632"
[1] "count= 633"
[1] "count= 634"
[1] "count= 635"
[1] "count= 636"
[1] "count= 637"
[1] "count= 638"
[1] "count= 639"
[1] "count= 640"
[1] "count= 641"
[1] "count= 642"
[1] "count= 643"
[1] "count= 644"
[1] "count= 645"
[1] "count= 646"
[1] "count= 647"
[1] "count= 648"
[1] "count= 649"
[1] "count= 650"
[1] "count= 651"
[1] "count= 652"
[1] "count= 653"
[1] "count= 654"
[1] "count= 655"
[1] "count= 656"
[1] "count= 657"
[1] "count= 658"
[1] "count= 659"
[1] "count= 660"
[1] "count= 661"
[1] "count= 662"
[1] "count= 663"
[1] "count= 664"
[1] "count= 665"
[1] "count= 666"
[1] "count= 667"
[1] "count= 668"
[1] "count= 669"
[1] "count= 670"
[1] "count= 671"
[1] "count= 672"
[1] "count= 673"
[1] "count= 674"
[1] "count= 675"
[1] "count= 676"
[1] "count= 677"
[1] "count= 678"
[1] "count= 679"
[1] "count= 680"
[1] "count= 681"
[1] "count= 682"
[1] "count= 683"
[1] "count= 684"
[1] "count= 685"
[1] "count= 686"
[1] "count= 687"
[1] "count= 688"
[1] "count= 689"
[1] "count= 690"
[1] "count= 691"
[1] "count= 692"
[1] "count= 693"
[1] "count= 694"
[1] "count= 695"
[1] "count= 696"
[1] "count= 697"
[1] "count= 698"
[1] "count= 699"
[1] "count= 700"
[1] "count= 701"
[1] "count= 702"
[1] "count= 703"
[1] "count= 704"
[1] "count= 705"
[1] "count= 706"
[1] "count= 707"
[1] "count= 708"
[1] "count= 709"
[1] "count= 710"
[1] "count= 711"
[1] "count= 712"
[1] "count= 713"
[1] "count= 714"
[1] "count= 715"
[1] "count= 716"
[1] "count= 717"
[1] "count= 718"
[1] "count= 719"
[1] "count= 720"
[1] "count= 721"
[1] "count= 722"
[1] "count= 723"
[1] "count= 724"
[1] "count= 725"
[1] "count= 726"
[1] "count= 727"
[1] "count= 728"
[1] "count= 729"
[1] "count= 730"
[1] "count= 731"
[1] "count= 732"
[1] "count= 733"
[1] "count= 734"
[1] "count= 735"
[1] "count= 736"
[1] "count= 737"
[1] "count= 738"
[1] "count= 739"
[1] "count= 740"
[1] "count= 741"
[1] "count= 742"
[1] "count= 743"
[1] "count= 744"
[1] "count= 745"
[1] "count= 746"
[1] "count= 747"
[1] "count= 748"
[1] "count= 749"
[1] "count= 750"
[1] "count= 751"
[1] "count= 752"
[1] "count= 753"
[1] "count= 754"
[1] "count= 755"
[1] "count= 756"
[1] "count= 757"
[1] "count= 758"
[1] "count= 759"
[1] "count= 760"
[1] "count= 761"
[1] "count= 762"
[1] "count= 763"
[1] "count= 764"
[1] "count= 765"
[1] "count= 766"
[1] "count= 767"
[1] "count= 768"
[1] "count= 769"
[1] "count= 770"
[1] "count= 771"
[1] "count= 772"
[1] "count= 773"
[1] "count= 774"
[1] "count= 775"
[1] "count= 776"
[1] "count= 777"
[1] "count= 778"
[1] "count= 779"
[1] "count= 780"
[1] "count= 781"
[1] "count= 782"
[1] "count= 783"
[1] "count= 784"
[1] "count= 785"
[1] "count= 786"
[1] "count= 787"
[1] "count= 788"
[1] "count= 789"
[1] "count= 790"
[1] "count= 791"
[1] "count= 792"
[1] "count= 793"
[1] "count= 794"
[1] "count= 795"
[1] "count= 796"
[1] "count= 797"
[1] "count= 798"
[1] "count= 799"
[1] "count= 800"
[1] "count= 801"
[1] "count= 802"
[1] "count= 803"
[1] "count= 804"
[1] "count= 805"
[1] "count= 806"
[1] "count= 807"
[1] "count= 808"
[1] "count= 809"
[1] "count= 810"
[1] "count= 811"
[1] "count= 812"
[1] "count= 813"
[1] "count= 814"
[1] "count= 815"
[1] "count= 816"
[1] "count= 817"
[1] "count= 818"
[1] "count= 819"
[1] "count= 820"
[1] "count= 821"
[1] "count= 822"
[1] "count= 823"
[1] "count= 824"
[1] "count= 825"
[1] "count= 826"
[1] "count= 827"
[1] "count= 828"
[1] "count= 829"
[1] "count= 830"
[1] "count= 831"
[1] "count= 832"
[1] "count= 833"
[1] "count= 834"
[1] "count= 835"
[1] "count= 836"
[1] "count= 837"
[1] "count= 838"
[1] "count= 839"
[1] "count= 840"
[1] "count= 841"
[1] "count= 842"
[1] "count= 843"
[1] "count= 844"
[1] "count= 845"
[1] "count= 846"
[1] "count= 847"
[1] "count= 848"
[1] "count= 849"
[1] "count= 850"
[1] "count= 851"
[1] "count= 852"
[1] "count= 853"
[1] "count= 854"
[1] "count= 855"
[1] "count= 856"
[1] "count= 857"
[1] "count= 858"
[1] "count= 859"
[1] "count= 860"
[1] "count= 861"
[1] "count= 862"
[1] "count= 863"
[1] "count= 864"
[1] "count= 865"
[1] "count= 866"
[1] "count= 867"
[1] "count= 868"
[1] "count= 869"
[1] "count= 870"
[1] "count= 871"
[1] "count= 872"
[1] "count= 873"
[1] "count= 874"
[1] "count= 875"
[1] "count= 876"
[1] "count= 877"
[1] "count= 878"
[1] "count= 879"
[1] "count= 880"
[1] "count= 881"
[1] "count= 882"
[1] "count= 883"
[1] "count= 884"
[1] "count= 885"
[1] "count= 886"
[1] "count= 887"
[1] "count= 888"
[1] "count= 889"
[1] "count= 890"
[1] "count= 891"
[1] "count= 892"
[1] "count= 893"
[1] "count= 894"
[1] "count= 895"
[1] "count= 896"
[1] "count= 897"
[1] "count= 898"
[1] "count= 899"
[1] "count= 900"
[1] "count= 901"
[1] "count= 902"
[1] "count= 903"
[1] "count= 904"
[1] "count= 905"
[1] "count= 906"
[1] "count= 907"
[1] "count= 908"
[1] "count= 909"
[1] "count= 910"
[1] "count= 911"
[1] "count= 912"
[1] "count= 913"
[1] "count= 914"
[1] "count= 915"
[1] "count= 916"
[1] "count= 917"
[1] "count= 918"
[1] "count= 919"
[1] "count= 920"
[1] "count= 921"
[1] "count= 922"
[1] "count= 923"
[1] "count= 924"
[1] "count= 925"
[1] "count= 926"
[1] "count= 927"
[1] "count= 928"
[1] "count= 929"
[1] "count= 930"
[1] "count= 931"
[1] "count= 932"
[1] "count= 933"
[1] "count= 934"
[1] "count= 935"
[1] "count= 936"
[1] "count= 937"
[1] "count= 938"
[1] "count= 939"
[1] "count= 940"
[1] "count= 941"
[1] "count= 942"
[1] "count= 943"
[1] "count= 944"
[1] "count= 945"
[1] "count= 946"
[1] "count= 947"
[1] "count= 948"
[1] "count= 949"
[1] "count= 950"
[1] "count= 951"
[1] "count= 952"
[1] "count= 953"
[1] "count= 954"
[1] "count= 955"
[1] "count= 956"
[1] "count= 957"
[1] "count= 958"
[1] "count= 959"
[1] "count= 960"
[1] "count= 961"
[1] "count= 962"
[1] "count= 963"
[1] "count= 964"
[1] "count= 965"
[1] "count= 966"
[1] "count= 967"
[1] "count= 968"
[1] "count= 969"
[1] "count= 970"
[1] "count= 971"
[1] "count= 972"
[1] "count= 973"
[1] "count= 974"
[1] "count= 975"
[1] "count= 976"
[1] "count= 977"
[1] "count= 978"
[1] "count= 979"
[1] "count= 980"
[1] "count= 981"
[1] "count= 982"
[1] "count= 983"
[1] "count= 984"
[1] "count= 985"
[1] "count= 986"
[1] "count= 987"
[1] "count= 988"
[1] "count= 989"
[1] "count= 990"
[1] "count= 991"
[1] "count= 992"
[1] "count= 993"
[1] "count= 994"
[1] "count= 995"
[1] "count= 996"
[1] "count= 997"
[1] "count= 998"
[1] "count= 999"
[1] "count= 1000"
>       
>       timestamp = format(Sys.time(), "%Y%b%d_%H%M%S")
>       age.file.name=paste("threshold", degreeThreshold, "p", p, "lambda1", lambda1, 
+                           "lambda2", lambda2,'popsize',popSize, "time",timestamp, "csv", sep="." )
>       full_age_file = paste( outputdir, '/', age.file.name, sep='')
>       
>       write.csv( popAges, full_age_file, row.names=F)
>       
> 

R version 3.2.1 (2015-06-18) -- "World-Famous Astronaut"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> ##########################################
> #2015Dec a generic network simulation code with files names as input
> #2015Oct13, use numeric lookup table for essential genes.
> #2014March3, redo ginppi simulation witht same parameter for ms02networks. 
> # 2014 Feb 17, change name "20131221.DIPandGIN.sim.aging_v2.R" to "net-aging-sim-2014Feb17.R"
> # 2013 Dec 20, merge DIP PPI and Genetic Inxt Net -> Multi-net approach
> #rm(list=ls())
> 
> single_network_failure_v2 = function(lambda1, lambda2=lambda1/10, threshold=4, p, pairs, essenLookupTb ) {
+   # single network failure simulation, 20151013Tue
+   # lambda1: First exponential constant failure rate for edges with degree > threshold
+   # lambda2: Second exponential constant failure rate for edges with degree <= threshold
+   # threshold: degree threshold for lambda1 and lambda2
+   # pairs: network in pairwide format, using numeric NOs 20151013
+   # essenLookupTb: lookup table for essential and nonessential genes, numeric values 
+   ## for debug:   lambda1 = 1/50; lambda2= lambda1/10; threshold=4; p=0.8
+   
+   inpairs = pairs[,3:4] #bookkeeping  
+   names(inpairs) = c('No1','No2')
+   
+   #get connectivities per node
+   degreeTb = data.frame( table(c(inpairs$No1, inpairs$No2)))
+   names(degreeTb) = c("No", "degree")
+   degreeTb$moduleAge = NA;
+   
+   for( i in 1:length(degreeTb[,1])){
+     if ( essenLookupTb[ degreeTb$No[i] ]) { #essential node
+       lambda = ifelse( degreeTb$degree[i] >= threshold, lambda1, lambda2)
+       age = rexp( degreeTb$degree[i], rate=lambda ) #exponential age
+       if(degreeTb$degree[i] >= threshold){
+         active = runif(degreeTb$degree[i])  #uniform interaction stochasticity
+         active = ifelse( active<=p, 1, NA  ) #pick active interactions
+         if( sum(active, na.rm=T) > 0 ){ #there should be at least 1 active intxn
+           age = age * active # only active interactions for modular age estimation
+           degreeTb$moduleAge[i] = max(age, na.rm=T) #maximum intxn age is the module age
+         } else {# when no active intxn is available 
+           degreeTb$moduleAge[i] = 0; #this module is born dead.
+         }
+       } else { # for degree < threshold, no stochasticity is applied. 
+         degreeTb$moduleAge[i] = max(age, na.rm=T) #maximum intxn age is the module age
+       }
+     } else {# non-essential node
+       degreeTb$moduleAge[i] = NA 
+     }
+   }
+   
+   summary(degreeTb)
+   currentNetworkAge = min(degreeTb$moduleAge, na.rm=T)
+ }
> #                    1                     2           3      4           5          6   7     8
> # R -f file --args pairwise-networkFile LookUpTbFile lambda1 lambda2 degreeThreshold p popSize outputdir
> # R -f 20151215-netsim-generic.R --args net1/Degree4N1000_network.csv  net1/net1/Degree4N1000_EssenLookupTb.csv 0.002 0.0002 5 1.0 1000 net1
> # R -f 20151215-netsim-generic.R --args data/merged_PPIGIN_Factorized2015Oct13.csv data/essntialGeneLookupTable_20151013.csv   0.002 0.0002 4 0.9 5
> 
> options(echo=TRUE) # if you want see commands in output file
> args <- commandArgs(trailingOnly = TRUE)
> print(args)
[1] "net1/Degree4N1000_network.csv"           
[2] "net1/net1/Degree4N1000_EssenLookupTb.csv"
[3] "0.002"                                   
[4] "0.0002"                                  
[5] "5"                                       
[6] "0.75"                                    
[7] "1000"                                    
[8] "net1"                                    
> inNetworkFile = args[1];
> inLookupTbFile = args[2];
> lambda1 = as.numeric(args[3]); lambda1;
[1] 0.002
> lambda2 = as.numeric(args[4]); lambda2;
[1] 2e-04
> degreeThreshold = as.integer((args[5])); degreeThreshold
[1] 5
> p = as.numeric(args[6]); p;
[1] 0.75
> popSize = as.numeric(args[7]); popSize;
[1] 1000
> outputdir = args[8];
> 
> list.files(path='net1', )
[1] "Degree4N1000_EssenLookupTb.csv"                                                       
[2] "Degree4N1000_network.csv"                                                             
[3] "threshold.5.p.0.75.lambda1.0.002.lambda2.2e-04.popsize.1000.time.2015Dec16_095125.csv"
[4] "threshold.5.p.0.8.lambda1.0.002.lambda2.2e-04.popsize.1000.time.2015Dec16_095054.csv" 
[5] "threshold.5.p.0.85.lambda1.0.002.lambda2.2e-04.popsize.1000.time.2015Dec16_095024.csv"
[6] "threshold.5.p.0.9.lambda1.0.002.lambda2.2e-04.popsize.1000.time.2015Dec16_094953.csv" 
[7] "threshold.5.p.0.95.lambda1.0.002.lambda2.2e-04.popsize.1000.time.2015Dec16_094923.csv"
> debug = 9; 
> 
> #essential gene info
> #essenTb = read.csv("data/SummaryRegressionHetHomFactorized2015Oct13.csv", colClasses=rep('character', 9))
> #essenLookupTb = read.csv("net1/Degree4N1000_EssenLookupTb.csv", row.names = 1)
> essenLookupTb = read.csv(inNetworkFile);
> essenLookupTb = essenLookupTb[,1];
> 
> # inNetworFile = "net1/Degree4N1000_network.csv"
> pairs = read.csv(inNetworkFile); 
> names(pairs) = c("No1", "No2")
>   print(head(pairs))
  No1  No2
1   1 1001
2   1 1002
3   1 1003
4   1 1004
5   2 1005
6   2 1006
>   if(debug==9) {     pairs = pairs[1:1000,]  }
>   pairs = pairs[ pairs$No1 != pairs$No2, ]  
> 
>   # label essential nodes, remove nonesse-nonessen pairs
>   pairs$essen1 = essenLookupTb[pairs$No1]
>   pairs$essen2 = essenLookupTb[pairs$No2]
>   #remove nonessen <-> nonessen intxn because they do not affect aging. 
>   pairs$remove = ifelse( pairs$essen1==F & pairs$essen2==F, T, F  )
>   pairs= pairs[! pairs$remove, ]  
>   # 31394 for one ms02 network
>   
>   #get connectivities per node
>   degreeTb = data.frame( table(c(pairs$No1, pairs$No2)))
>   summary(degreeTb); 
      Var1           Freq    
 1      :   1   Min.   :1.0  
 2      :   1   1st Qu.:1.0  
 3      :   1   Median :1.0  
 4      :   1   Mean   :1.6  
 5      :   1   3rd Qu.:1.0  
 6      :   1   Max.   :4.0  
 (Other):1244                
>   degreeTb[1:10,]
   Var1 Freq
1     1    4
2     2    4
3     3    4
4     4    4
5     5    4
6     6    4
7     7    4
8     8    4
9     9    4
10   10    4
>   
>       popAges = numeric(popSize)
>       time1 = date()
>       j=1; count = 0; 
>       while ((j <= popSize) && ( count < popSize*30)) {
+         count = count + 1;      
+         print(paste("count=",count))
+         currentNetworkAge = single_network_failure_v2(lambda1, lambda2, degreeThreshold, p, pairs, essenLookupTb)
+         if (currentNetworkAge > 0) {
+           popAges[j] = currentNetworkAge      
+           j = j+1
+         } 
+       }# end of j while-loop, population loop
[1] "count= 1"
[1] "count= 2"
[1] "count= 3"
[1] "count= 4"
[1] "count= 5"
[1] "count= 6"
[1] "count= 7"
[1] "count= 8"
[1] "count= 9"
[1] "count= 10"
[1] "count= 11"
[1] "count= 12"
[1] "count= 13"
[1] "count= 14"
[1] "count= 15"
[1] "count= 16"
[1] "count= 17"
[1] "count= 18"
[1] "count= 19"
[1] "count= 20"
[1] "count= 21"
[1] "count= 22"
[1] "count= 23"
[1] "count= 24"
[1] "count= 25"
[1] "count= 26"
[1] "count= 27"
[1] "count= 28"
[1] "count= 29"
[1] "count= 30"
[1] "count= 31"
[1] "count= 32"
[1] "count= 33"
[1] "count= 34"
[1] "count= 35"
[1] "count= 36"
[1] "count= 37"
[1] "count= 38"
[1] "count= 39"
[1] "count= 40"
[1] "count= 41"
[1] "count= 42"
[1] "count= 43"
[1] "count= 44"
[1] "count= 45"
[1] "count= 46"
[1] "count= 47"
[1] "count= 48"
[1] "count= 49"
[1] "count= 50"
[1] "count= 51"
[1] "count= 52"
[1] "count= 53"
[1] "count= 54"
[1] "count= 55"
[1] "count= 56"
[1] "count= 57"
[1] "count= 58"
[1] "count= 59"
[1] "count= 60"
[1] "count= 61"
[1] "count= 62"
[1] "count= 63"
[1] "count= 64"
[1] "count= 65"
[1] "count= 66"
[1] "count= 67"
[1] "count= 68"
[1] "count= 69"
[1] "count= 70"
[1] "count= 71"
[1] "count= 72"
[1] "count= 73"
[1] "count= 74"
[1] "count= 75"
[1] "count= 76"
[1] "count= 77"
[1] "count= 78"
[1] "count= 79"
[1] "count= 80"
[1] "count= 81"
[1] "count= 82"
[1] "count= 83"
[1] "count= 84"
[1] "count= 85"
[1] "count= 86"
[1] "count= 87"
[1] "count= 88"
[1] "count= 89"
[1] "count= 90"
[1] "count= 91"
[1] "count= 92"
[1] "count= 93"
[1] "count= 94"
[1] "count= 95"
[1] "count= 96"
[1] "count= 97"
[1] "count= 98"
[1] "count= 99"
[1] "count= 100"
[1] "count= 101"
[1] "count= 102"
[1] "count= 103"
[1] "count= 104"
[1] "count= 105"
[1] "count= 106"
[1] "count= 107"
[1] "count= 108"
[1] "count= 109"
[1] "count= 110"
[1] "count= 111"
[1] "count= 112"
[1] "count= 113"
[1] "count= 114"
[1] "count= 115"
[1] "count= 116"
[1] "count= 117"
[1] "count= 118"
[1] "count= 119"
[1] "count= 120"
[1] "count= 121"
[1] "count= 122"
[1] "count= 123"
[1] "count= 124"
[1] "count= 125"
[1] "count= 126"
[1] "count= 127"
[1] "count= 128"
[1] "count= 129"
[1] "count= 130"
[1] "count= 131"
[1] "count= 132"
[1] "count= 133"
[1] "count= 134"
[1] "count= 135"
[1] "count= 136"
[1] "count= 137"
[1] "count= 138"
[1] "count= 139"
[1] "count= 140"
[1] "count= 141"
[1] "count= 142"
[1] "count= 143"
[1] "count= 144"
[1] "count= 145"
[1] "count= 146"
[1] "count= 147"
[1] "count= 148"
[1] "count= 149"
[1] "count= 150"
[1] "count= 151"
[1] "count= 152"
[1] "count= 153"
[1] "count= 154"
[1] "count= 155"
[1] "count= 156"
[1] "count= 157"
[1] "count= 158"
[1] "count= 159"
[1] "count= 160"
[1] "count= 161"
[1] "count= 162"
[1] "count= 163"
[1] "count= 164"
[1] "count= 165"
[1] "count= 166"
[1] "count= 167"
[1] "count= 168"
[1] "count= 169"
[1] "count= 170"
[1] "count= 171"
[1] "count= 172"
[1] "count= 173"
[1] "count= 174"
[1] "count= 175"
[1] "count= 176"
[1] "count= 177"
[1] "count= 178"
[1] "count= 179"
[1] "count= 180"
[1] "count= 181"
[1] "count= 182"
[1] "count= 183"
[1] "count= 184"
[1] "count= 185"
[1] "count= 186"
[1] "count= 187"
[1] "count= 188"
[1] "count= 189"
[1] "count= 190"
[1] "count= 191"
[1] "count= 192"
[1] "count= 193"
[1] "count= 194"
[1] "count= 195"
[1] "count= 196"
[1] "count= 197"
[1] "count= 198"
[1] "count= 199"
[1] "count= 200"
[1] "count= 201"
[1] "count= 202"
[1] "count= 203"
[1] "count= 204"
[1] "count= 205"
[1] "count= 206"
[1] "count= 207"
[1] "count= 208"
[1] "count= 209"
[1] "count= 210"
[1] "count= 211"
[1] "count= 212"
[1] "count= 213"
[1] "count= 214"
[1] "count= 215"
[1] "count= 216"
[1] "count= 217"
[1] "count= 218"
[1] "count= 219"
[1] "count= 220"
[1] "count= 221"
[1] "count= 222"
[1] "count= 223"
[1] "count= 224"
[1] "count= 225"
[1] "count= 226"
[1] "count= 227"
[1] "count= 228"
[1] "count= 229"
[1] "count= 230"
[1] "count= 231"
[1] "count= 232"
[1] "count= 233"
[1] "count= 234"
[1] "count= 235"
[1] "count= 236"
[1] "count= 237"
[1] "count= 238"
[1] "count= 239"
[1] "count= 240"
[1] "count= 241"
[1] "count= 242"
[1] "count= 243"
[1] "count= 244"
[1] "count= 245"
[1] "count= 246"
[1] "count= 247"
[1] "count= 248"
[1] "count= 249"
[1] "count= 250"
[1] "count= 251"
[1] "count= 252"
[1] "count= 253"
[1] "count= 254"
[1] "count= 255"
[1] "count= 256"
[1] "count= 257"
[1] "count= 258"
[1] "count= 259"
[1] "count= 260"
[1] "count= 261"
[1] "count= 262"
[1] "count= 263"
[1] "count= 264"
[1] "count= 265"
[1] "count= 266"
[1] "count= 267"
[1] "count= 268"
[1] "count= 269"
[1] "count= 270"
[1] "count= 271"
[1] "count= 272"
[1] "count= 273"
[1] "count= 274"
[1] "count= 275"
[1] "count= 276"
[1] "count= 277"
[1] "count= 278"
[1] "count= 279"
[1] "count= 280"
[1] "count= 281"
[1] "count= 282"
[1] "count= 283"
[1] "count= 284"
[1] "count= 285"
[1] "count= 286"
[1] "count= 287"
[1] "count= 288"
[1] "count= 289"
[1] "count= 290"
[1] "count= 291"
[1] "count= 292"
[1] "count= 293"
[1] "count= 294"
[1] "count= 295"
[1] "count= 296"
[1] "count= 297"
[1] "count= 298"
[1] "count= 299"
[1] "count= 300"
[1] "count= 301"
[1] "count= 302"
[1] "count= 303"
[1] "count= 304"
[1] "count= 305"
[1] "count= 306"
[1] "count= 307"
[1] "count= 308"
[1] "count= 309"
[1] "count= 310"
[1] "count= 311"
[1] "count= 312"
[1] "count= 313"
[1] "count= 314"
[1] "count= 315"
[1] "count= 316"
[1] "count= 317"
[1] "count= 318"
[1] "count= 319"
[1] "count= 320"
[1] "count= 321"
[1] "count= 322"
[1] "count= 323"
[1] "count= 324"
[1] "count= 325"
[1] "count= 326"
[1] "count= 327"
[1] "count= 328"
[1] "count= 329"
[1] "count= 330"
[1] "count= 331"
[1] "count= 332"
[1] "count= 333"
[1] "count= 334"
[1] "count= 335"
[1] "count= 336"
[1] "count= 337"
[1] "count= 338"
[1] "count= 339"
[1] "count= 340"
[1] "count= 341"
[1] "count= 342"
[1] "count= 343"
[1] "count= 344"
[1] "count= 345"
[1] "count= 346"
[1] "count= 347"
[1] "count= 348"
[1] "count= 349"
[1] "count= 350"
[1] "count= 351"
[1] "count= 352"
[1] "count= 353"
[1] "count= 354"
[1] "count= 355"
[1] "count= 356"
[1] "count= 357"
[1] "count= 358"
[1] "count= 359"
[1] "count= 360"
[1] "count= 361"
[1] "count= 362"
[1] "count= 363"
[1] "count= 364"
[1] "count= 365"
[1] "count= 366"
[1] "count= 367"
[1] "count= 368"
[1] "count= 369"
[1] "count= 370"
[1] "count= 371"
[1] "count= 372"
[1] "count= 373"
[1] "count= 374"
[1] "count= 375"
[1] "count= 376"
[1] "count= 377"
[1] "count= 378"
[1] "count= 379"
[1] "count= 380"
[1] "count= 381"
[1] "count= 382"
[1] "count= 383"
[1] "count= 384"
[1] "count= 385"
[1] "count= 386"
[1] "count= 387"
[1] "count= 388"
[1] "count= 389"
[1] "count= 390"
[1] "count= 391"
[1] "count= 392"
[1] "count= 393"
[1] "count= 394"
[1] "count= 395"
[1] "count= 396"
[1] "count= 397"
[1] "count= 398"
[1] "count= 399"
[1] "count= 400"
[1] "count= 401"
[1] "count= 402"
[1] "count= 403"
[1] "count= 404"
[1] "count= 405"
[1] "count= 406"
[1] "count= 407"
[1] "count= 408"
[1] "count= 409"
[1] "count= 410"
[1] "count= 411"
[1] "count= 412"
[1] "count= 413"
[1] "count= 414"
[1] "count= 415"
[1] "count= 416"
[1] "count= 417"
[1] "count= 418"
[1] "count= 419"
[1] "count= 420"
[1] "count= 421"
[1] "count= 422"
[1] "count= 423"
[1] "count= 424"
[1] "count= 425"
[1] "count= 426"
[1] "count= 427"
[1] "count= 428"
[1] "count= 429"
[1] "count= 430"
[1] "count= 431"
[1] "count= 432"
[1] "count= 433"
[1] "count= 434"
[1] "count= 435"
[1] "count= 436"
[1] "count= 437"
[1] "count= 438"
[1] "count= 439"
[1] "count= 440"
[1] "count= 441"
[1] "count= 442"
[1] "count= 443"
[1] "count= 444"
[1] "count= 445"
[1] "count= 446"
[1] "count= 447"
[1] "count= 448"
[1] "count= 449"
[1] "count= 450"
[1] "count= 451"
[1] "count= 452"
[1] "count= 453"
[1] "count= 454"
[1] "count= 455"
[1] "count= 456"
[1] "count= 457"
[1] "count= 458"
[1] "count= 459"
[1] "count= 460"
[1] "count= 461"
[1] "count= 462"
[1] "count= 463"
[1] "count= 464"
[1] "count= 465"
[1] "count= 466"
[1] "count= 467"
[1] "count= 468"
[1] "count= 469"
[1] "count= 470"
[1] "count= 471"
[1] "count= 472"
[1] "count= 473"
[1] "count= 474"
[1] "count= 475"
[1] "count= 476"
[1] "count= 477"
[1] "count= 478"
[1] "count= 479"
[1] "count= 480"
[1] "count= 481"
[1] "count= 482"
[1] "count= 483"
[1] "count= 484"
[1] "count= 485"
[1] "count= 486"
[1] "count= 487"
[1] "count= 488"
[1] "count= 489"
[1] "count= 490"
[1] "count= 491"
[1] "count= 492"
[1] "count= 493"
[1] "count= 494"
[1] "count= 495"
[1] "count= 496"
[1] "count= 497"
[1] "count= 498"
[1] "count= 499"
[1] "count= 500"
[1] "count= 501"
[1] "count= 502"
[1] "count= 503"
[1] "count= 504"
[1] "count= 505"
[1] "count= 506"
[1] "count= 507"
[1] "count= 508"
[1] "count= 509"
[1] "count= 510"
[1] "count= 511"
[1] "count= 512"
[1] "count= 513"
[1] "count= 514"
[1] "count= 515"
[1] "count= 516"
[1] "count= 517"
[1] "count= 518"
[1] "count= 519"
[1] "count= 520"
[1] "count= 521"
[1] "count= 522"
[1] "count= 523"
[1] "count= 524"
[1] "count= 525"
[1] "count= 526"
[1] "count= 527"
[1] "count= 528"
[1] "count= 529"
[1] "count= 530"
[1] "count= 531"
[1] "count= 532"
[1] "count= 533"
[1] "count= 534"
[1] "count= 535"
[1] "count= 536"
[1] "count= 537"
[1] "count= 538"
[1] "count= 539"
[1] "count= 540"
[1] "count= 541"
[1] "count= 542"
[1] "count= 543"
[1] "count= 544"
[1] "count= 545"
[1] "count= 546"
[1] "count= 547"
[1] "count= 548"
[1] "count= 549"
[1] "count= 550"
[1] "count= 551"
[1] "count= 552"
[1] "count= 553"
[1] "count= 554"
[1] "count= 555"
[1] "count= 556"
[1] "count= 557"
[1] "count= 558"
[1] "count= 559"
[1] "count= 560"
[1] "count= 561"
[1] "count= 562"
[1] "count= 563"
[1] "count= 564"
[1] "count= 565"
[1] "count= 566"
[1] "count= 567"
[1] "count= 568"
[1] "count= 569"
[1] "count= 570"
[1] "count= 571"
[1] "count= 572"
[1] "count= 573"
[1] "count= 574"
[1] "count= 575"
[1] "count= 576"
[1] "count= 577"
[1] "count= 578"
[1] "count= 579"
[1] "count= 580"
[1] "count= 581"
[1] "count= 582"
[1] "count= 583"
[1] "count= 584"
[1] "count= 585"
[1] "count= 586"
[1] "count= 587"
[1] "count= 588"
[1] "count= 589"
[1] "count= 590"
[1] "count= 591"
[1] "count= 592"
[1] "count= 593"
[1] "count= 594"
[1] "count= 595"
[1] "count= 596"
[1] "count= 597"
[1] "count= 598"
[1] "count= 599"
[1] "count= 600"
[1] "count= 601"
[1] "count= 602"
[1] "count= 603"
[1] "count= 604"
[1] "count= 605"
[1] "count= 606"
[1] "count= 607"
[1] "count= 608"
[1] "count= 609"
[1] "count= 610"
[1] "count= 611"
[1] "count= 612"
[1] "count= 613"
[1] "count= 614"
[1] "count= 615"
[1] "count= 616"
[1] "count= 617"
[1] "count= 618"
[1] "count= 619"
[1] "count= 620"
[1] "count= 621"
[1] "count= 622"
[1] "count= 623"
[1] "count= 624"
[1] "count= 625"
[1] "count= 626"
[1] "count= 627"
[1] "count= 628"
[1] "count= 629"
[1] "count= 630"
[1] "count= 631"
[1] "count= 632"
[1] "count= 633"
[1] "count= 634"
[1] "count= 635"
[1] "count= 636"
[1] "count= 637"
[1] "count= 638"
[1] "count= 639"
[1] "count= 640"
[1] "count= 641"
[1] "count= 642"
[1] "count= 643"
[1] "count= 644"
[1] "count= 645"
[1] "count= 646"
[1] "count= 647"
[1] "count= 648"
[1] "count= 649"
[1] "count= 650"
[1] "count= 651"
[1] "count= 652"
[1] "count= 653"
[1] "count= 654"
[1] "count= 655"
[1] "count= 656"
[1] "count= 657"
[1] "count= 658"
[1] "count= 659"
[1] "count= 660"
[1] "count= 661"
[1] "count= 662"
[1] "count= 663"
[1] "count= 664"
[1] "count= 665"
[1] "count= 666"
[1] "count= 667"
[1] "count= 668"
[1] "count= 669"
[1] "count= 670"
[1] "count= 671"
[1] "count= 672"
[1] "count= 673"
[1] "count= 674"
[1] "count= 675"
[1] "count= 676"
[1] "count= 677"
[1] "count= 678"
[1] "count= 679"
[1] "count= 680"
[1] "count= 681"
[1] "count= 682"
[1] "count= 683"
[1] "count= 684"
[1] "count= 685"
[1] "count= 686"
[1] "count= 687"
[1] "count= 688"
[1] "count= 689"
[1] "count= 690"
[1] "count= 691"
[1] "count= 692"
[1] "count= 693"
[1] "count= 694"
[1] "count= 695"
[1] "count= 696"
[1] "count= 697"
[1] "count= 698"
[1] "count= 699"
[1] "count= 700"
[1] "count= 701"
[1] "count= 702"
[1] "count= 703"
[1] "count= 704"
[1] "count= 705"
[1] "count= 706"
[1] "count= 707"
[1] "count= 708"
[1] "count= 709"
[1] "count= 710"
[1] "count= 711"
[1] "count= 712"
[1] "count= 713"
[1] "count= 714"
[1] "count= 715"
[1] "count= 716"
[1] "count= 717"
[1] "count= 718"
[1] "count= 719"
[1] "count= 720"
[1] "count= 721"
[1] "count= 722"
[1] "count= 723"
[1] "count= 724"
[1] "count= 725"
[1] "count= 726"
[1] "count= 727"
[1] "count= 728"
[1] "count= 729"
[1] "count= 730"
[1] "count= 731"
[1] "count= 732"
[1] "count= 733"
[1] "count= 734"
[1] "count= 735"
[1] "count= 736"
[1] "count= 737"
[1] "count= 738"
[1] "count= 739"
[1] "count= 740"
[1] "count= 741"
[1] "count= 742"
[1] "count= 743"
[1] "count= 744"
[1] "count= 745"
[1] "count= 746"
[1] "count= 747"
[1] "count= 748"
[1] "count= 749"
[1] "count= 750"
[1] "count= 751"
[1] "count= 752"
[1] "count= 753"
[1] "count= 754"
[1] "count= 755"
[1] "count= 756"
[1] "count= 757"
[1] "count= 758"
[1] "count= 759"
[1] "count= 760"
[1] "count= 761"
[1] "count= 762"
[1] "count= 763"
[1] "count= 764"
[1] "count= 765"
[1] "count= 766"
[1] "count= 767"
[1] "count= 768"
[1] "count= 769"
[1] "count= 770"
[1] "count= 771"
[1] "count= 772"
[1] "count= 773"
[1] "count= 774"
[1] "count= 775"
[1] "count= 776"
[1] "count= 777"
[1] "count= 778"
[1] "count= 779"
[1] "count= 780"
[1] "count= 781"
[1] "count= 782"
[1] "count= 783"
[1] "count= 784"
[1] "count= 785"
[1] "count= 786"
[1] "count= 787"
[1] "count= 788"
[1] "count= 789"
[1] "count= 790"
[1] "count= 791"
[1] "count= 792"
[1] "count= 793"
[1] "count= 794"
[1] "count= 795"
[1] "count= 796"
[1] "count= 797"
[1] "count= 798"
[1] "count= 799"
[1] "count= 800"
[1] "count= 801"
[1] "count= 802"
[1] "count= 803"
[1] "count= 804"
[1] "count= 805"
[1] "count= 806"
[1] "count= 807"
[1] "count= 808"
[1] "count= 809"
[1] "count= 810"
[1] "count= 811"
[1] "count= 812"
[1] "count= 813"
[1] "count= 814"
[1] "count= 815"
[1] "count= 816"
[1] "count= 817"
[1] "count= 818"
[1] "count= 819"
[1] "count= 820"
[1] "count= 821"
[1] "count= 822"
[1] "count= 823"
[1] "count= 824"
[1] "count= 825"
[1] "count= 826"
[1] "count= 827"
[1] "count= 828"
[1] "count= 829"
[1] "count= 830"
[1] "count= 831"
[1] "count= 832"
[1] "count= 833"
[1] "count= 834"
[1] "count= 835"
[1] "count= 836"
[1] "count= 837"
[1] "count= 838"
[1] "count= 839"
[1] "count= 840"
[1] "count= 841"
[1] "count= 842"
[1] "count= 843"
[1] "count= 844"
[1] "count= 845"
[1] "count= 846"
[1] "count= 847"
[1] "count= 848"
[1] "count= 849"
[1] "count= 850"
[1] "count= 851"
[1] "count= 852"
[1] "count= 853"
[1] "count= 854"
[1] "count= 855"
[1] "count= 856"
[1] "count= 857"
[1] "count= 858"
[1] "count= 859"
[1] "count= 860"
[1] "count= 861"
[1] "count= 862"
[1] "count= 863"
[1] "count= 864"
[1] "count= 865"
[1] "count= 866"
[1] "count= 867"
[1] "count= 868"
[1] "count= 869"
[1] "count= 870"
[1] "count= 871"
[1] "count= 872"
[1] "count= 873"
[1] "count= 874"
[1] "count= 875"
[1] "count= 876"
[1] "count= 877"
[1] "count= 878"
[1] "count= 879"
[1] "count= 880"
[1] "count= 881"
[1] "count= 882"
[1] "count= 883"
[1] "count= 884"
[1] "count= 885"
[1] "count= 886"
[1] "count= 887"
[1] "count= 888"
[1] "count= 889"
[1] "count= 890"
[1] "count= 891"
[1] "count= 892"
[1] "count= 893"
[1] "count= 894"
[1] "count= 895"
[1] "count= 896"
[1] "count= 897"
[1] "count= 898"
[1] "count= 899"
[1] "count= 900"
[1] "count= 901"
[1] "count= 902"
[1] "count= 903"
[1] "count= 904"
[1] "count= 905"
[1] "count= 906"
[1] "count= 907"
[1] "count= 908"
[1] "count= 909"
[1] "count= 910"
[1] "count= 911"
[1] "count= 912"
[1] "count= 913"
[1] "count= 914"
[1] "count= 915"
[1] "count= 916"
[1] "count= 917"
[1] "count= 918"
[1] "count= 919"
[1] "count= 920"
[1] "count= 921"
[1] "count= 922"
[1] "count= 923"
[1] "count= 924"
[1] "count= 925"
[1] "count= 926"
[1] "count= 927"
[1] "count= 928"
[1] "count= 929"
[1] "count= 930"
[1] "count= 931"
[1] "count= 932"
[1] "count= 933"
[1] "count= 934"
[1] "count= 935"
[1] "count= 936"
[1] "count= 937"
[1] "count= 938"
[1] "count= 939"
[1] "count= 940"
[1] "count= 941"
[1] "count= 942"
[1] "count= 943"
[1] "count= 944"
[1] "count= 945"
[1] "count= 946"
[1] "count= 947"
[1] "count= 948"
[1] "count= 949"
[1] "count= 950"
[1] "count= 951"
[1] "count= 952"
[1] "count= 953"
[1] "count= 954"
[1] "count= 955"
[1] "count= 956"
[1] "count= 957"
[1] "count= 958"
[1] "count= 959"
[1] "count= 960"
[1] "count= 961"
[1] "count= 962"
[1] "count= 963"
[1] "count= 964"
[1] "count= 965"
[1] "count= 966"
[1] "count= 967"
[1] "count= 968"
[1] "count= 969"
[1] "count= 970"
[1] "count= 971"
[1] "count= 972"
[1] "count= 973"
[1] "count= 974"
[1] "count= 975"
[1] "count= 976"
[1] "count= 977"
[1] "count= 978"
[1] "count= 979"
[1] "count= 980"
[1] "count= 981"
[1] "count= 982"
[1] "count= 983"
[1] "count= 984"
[1] "count= 985"
[1] "count= 986"
[1] "count= 987"
[1] "count= 988"
[1] "count= 989"
[1] "count= 990"
[1] "count= 991"
[1] "count= 992"
[1] "count= 993"
[1] "count= 994"
[1] "count= 995"
[1] "count= 996"
[1] "count= 997"
[1] "count= 998"
[1] "count= 999"
[1] "count= 1000"
>       
>       timestamp = format(Sys.time(), "%Y%b%d_%H%M%S")
>       age.file.name=paste("threshold", degreeThreshold, "p", p, "lambda1", lambda1, 
+                           "lambda2", lambda2,'popsize',popSize, "time",timestamp, "csv", sep="." )
>       full_age_file = paste( outputdir, '/', age.file.name, sep='')
>       
>       write.csv( popAges, full_age_file, row.names=F)
>       
> 
